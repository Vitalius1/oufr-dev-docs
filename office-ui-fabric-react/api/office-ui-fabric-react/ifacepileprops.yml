### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IFacepileProps
    name: IFacepileProps
    fullName: IFacepileProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.ClassAttributes<FacepileBase> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IFacepileProps.addButtonProps
      - office-ui-fabric-react.IFacepileProps.ariaDescription
      - office-ui-fabric-react.IFacepileProps.chevronButtonProps
      - office-ui-fabric-react.IFacepileProps.className
      - office-ui-fabric-react.IFacepileProps.componentRef
      - office-ui-fabric-react.IFacepileProps.getPersonaProps
      - office-ui-fabric-react.IFacepileProps.maxDisplayablePersonas
      - office-ui-fabric-react.IFacepileProps.overflowButtonProps
      - office-ui-fabric-react.IFacepileProps.overflowButtonType
      - office-ui-fabric-react.IFacepileProps.overflowPersonas
      - office-ui-fabric-react.IFacepileProps.personas
      - office-ui-fabric-react.IFacepileProps.personaSize
      - office-ui-fabric-react.IFacepileProps.showAddButton
      - office-ui-fabric-react.IFacepileProps.styles
      - office-ui-fabric-react.IFacepileProps.theme
  - uid: office-ui-fabric-react.IFacepileProps.addButtonProps
    summary: Button properties for the add face button
    name: addButtonProps
    fullName: addButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'addButtonProps?: IButtonProps;'
      return:
        type:
          - office-ui-fabric-react.IButtonProps
  - uid: office-ui-fabric-react.IFacepileProps.ariaDescription
    summary: ARIA label for persona list
    name: ariaDescription
    fullName: ariaDescription
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaDescription?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IFacepileProps.chevronButtonProps
    summary: 'Deprecated at v0.70, use `overflowButtonProps` instead.'
    deprecated:
      content: Use `overflowButtonProps` instead.
    name: chevronButtonProps
    fullName: chevronButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chevronButtonProps?: IButtonProps;'
      return:
        type:
          - office-ui-fabric-react.IButtonProps
  - uid: office-ui-fabric-react.IFacepileProps.className
    summary: Additional css class to apply to the Facepile
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IFacepileProps.componentRef
    summary: >-
      Optional callback to access the IFacepile interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IFacepile>;'
      return:
        type:
          - IRefObject<IFacepile>
  - uid: office-ui-fabric-react.IFacepileProps.getPersonaProps
    summary: Method to access properties on the underlying Persona control
    name: getPersonaProps
    fullName: getPersonaProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getPersonaProps?: (persona: IFacepilePersona) => IPersonaSharedProps;'
      return:
        type:
          - '(persona: IFacepilePersona) => IPersonaSharedProps'
  - uid: office-ui-fabric-react.IFacepileProps.maxDisplayablePersonas
    summary: Maximum number of personas to show
    name: maxDisplayablePersonas
    fullName: maxDisplayablePersonas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxDisplayablePersonas?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IFacepileProps.overflowButtonProps
    summary: Properties for the overflow icon
    name: overflowButtonProps
    fullName: overflowButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowButtonProps?: IButtonProps;'
      return:
        type:
          - office-ui-fabric-react.IButtonProps
  - uid: office-ui-fabric-react.IFacepileProps.overflowButtonType
    summary: Type of overflow icon to use
    name: overflowButtonType
    fullName: overflowButtonType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowButtonType?: OverflowButtonType;'
      return:
        type:
          - office-ui-fabric-react.OverflowButtonType
  - uid: office-ui-fabric-react.IFacepileProps.overflowPersonas
    summary: Personas to place in the overflow
    name: overflowPersonas
    fullName: overflowPersonas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowPersonas?: IFacepilePersona[];'
      return:
        type:
          - 'IFacepilePersona[]'
  - uid: office-ui-fabric-react.IFacepileProps.personas
    summary: Array of IPersonaProps that define each Persona.
    name: personas
    fullName: personas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'personas: IFacepilePersona[];'
      return:
        type:
          - 'IFacepilePersona[]'
  - uid: office-ui-fabric-react.IFacepileProps.personaSize
    summary: Size to display the personas
    name: personaSize
    fullName: personaSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'personaSize?: PersonaSize;'
      return:
        type:
          - office-ui-fabric-react.PersonaSize
  - uid: office-ui-fabric-react.IFacepileProps.showAddButton
    summary: Show add person button
    name: showAddButton
    fullName: showAddButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAddButton?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IFacepileProps.styles
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IFacepileStyleProps, IFacepileStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IFacepileStyleProps, IFacepileStyles>'
  - uid: office-ui-fabric-react.IFacepileProps.theme
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - styling.ITheme
