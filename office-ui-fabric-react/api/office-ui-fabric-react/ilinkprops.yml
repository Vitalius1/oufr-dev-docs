### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ILinkProps
    name: ILinkProps
    fullName: ILinkProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'ILinkHTMLAttributes<HTMLAnchorElement | HTMLButtonElement | HTMLElement | LinkBase> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.ILinkProps.as
      - office-ui-fabric-react.ILinkProps.componentRef
      - office-ui-fabric-react.ILinkProps.disabled
      - office-ui-fabric-react.ILinkProps.keytipProps
      - office-ui-fabric-react.ILinkProps.styles
      - office-ui-fabric-react.ILinkProps.theme
  - uid: office-ui-fabric-react.ILinkProps.as
    summary: A component that should be used as the root element of the link returned from the Link component.
    name: as
    fullName: as
    langs:
      - typeScript
    type: property
    syntax:
      content: 'as?: string | React.ComponentClass | React.StatelessComponent;'
      return:
        type:
          - string | React.ComponentClass | React.StatelessComponent
  - uid: office-ui-fabric-react.ILinkProps.componentRef
    summary: >-
      Optional callback to access the ILink interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ILink>;'
      return:
        type:
          - IRefObject<ILink>
  - uid: office-ui-fabric-react.ILinkProps.disabled
    summary: Whether the link is disabled
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.ILinkProps.keytipProps
    summary: Optional keytip for this Link
    name: keytipProps
    fullName: keytipProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'keytipProps?: IKeytipProps;'
      return:
        type:
          - office-ui-fabric-react.IKeytipProps
  - uid: office-ui-fabric-react.ILinkProps.styles
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ILinkStyleProps, ILinkStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ILinkStyleProps, ILinkStyles>'
  - uid: office-ui-fabric-react.ILinkProps.theme
    summary: Theme (provided through customization.)
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - styling.ITheme
