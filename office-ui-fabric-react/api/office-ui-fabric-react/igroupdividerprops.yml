### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IGroupDividerProps
    name: IGroupDividerProps
    fullName: IGroupDividerProps
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IGroupDividerProps.className
      - office-ui-fabric-react.IGroupDividerProps.compact
      - office-ui-fabric-react.IGroupDividerProps.componentRef
      - office-ui-fabric-react.IGroupDividerProps.expandButtonProps
      - office-ui-fabric-react.IGroupDividerProps.footerText
      - office-ui-fabric-react.IGroupDividerProps.group
      - office-ui-fabric-react.IGroupDividerProps.groupIndex
      - office-ui-fabric-react.IGroupDividerProps.groupLevel
      - office-ui-fabric-react.IGroupDividerProps.groups
      - office-ui-fabric-react.IGroupDividerProps.indentWidth
      - office-ui-fabric-react.IGroupDividerProps.isCollapsedGroupSelectVisible
      - office-ui-fabric-react.IGroupDividerProps.isGroupLoading
      - office-ui-fabric-react.IGroupDividerProps.isSelected
      - office-ui-fabric-react.IGroupDividerProps.loadingText
      - office-ui-fabric-react.IGroupDividerProps.onGroupHeaderClick
      - office-ui-fabric-react.IGroupDividerProps.onRenderTitle
      - office-ui-fabric-react.IGroupDividerProps.onToggleCollapse
      - office-ui-fabric-react.IGroupDividerProps.onToggleSelectGroup
      - office-ui-fabric-react.IGroupDividerProps.onToggleSummarize
      - office-ui-fabric-react.IGroupDividerProps.selected
      - office-ui-fabric-react.IGroupDividerProps.selectionMode
      - office-ui-fabric-react.IGroupDividerProps.showAllLinkText
      - office-ui-fabric-react.IGroupDividerProps.theme
      - office-ui-fabric-react.IGroupDividerProps.viewport
  - uid: office-ui-fabric-react.IGroupDividerProps.className
    summary: Custom className
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IGroupDividerProps.compact
    summary: Boolean value to indicate if the component should render in compact mode. Set to false by default
    name: compact
    fullName: compact
    langs:
      - typeScript
    type: property
    syntax:
      content: 'compact?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IGroupDividerProps.componentRef
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<{}>;'
      return:
        type:
          - 'IRefObject<{}>'
  - uid: office-ui-fabric-react.IGroupDividerProps.expandButtonProps
    summary: Props for expand/collapse button
    deprecated:
      content: >-
        Use [IGroupHeaderProps.expandButtonProps](xref:office-ui-fabric-react.IGroupHeaderProps.expandButtonProps)
        instead.
    name: expandButtonProps
    fullName: expandButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'expandButtonProps?: React.HTMLAttributes<HTMLButtonElement>;'
      return:
        type:
          - React.HTMLAttributes<HTMLButtonElement>
  - uid: office-ui-fabric-react.IGroupDividerProps.footerText
    summary: Text to display for the group footer.
    name: footerText
    fullName: footerText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'footerText?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IGroupDividerProps.group
    summary: The group to be rendered by the header.
    name: group
    fullName: group
    langs:
      - typeScript
    type: property
    syntax:
      content: 'group?: IGroup;'
      return:
        type:
          - office-ui-fabric-react.IGroup
  - uid: office-ui-fabric-react.IGroupDividerProps.groupIndex
    summary: The index of the group.
    name: groupIndex
    fullName: groupIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groupIndex?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IGroupDividerProps.groupLevel
    summary: The indent level of the group.
    name: groupLevel
    fullName: groupLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groupLevel?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IGroupDividerProps.groups
    summary: Stores parent group's children.
    name: groups
    fullName: groups
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groups?: IGroup[];'
      return:
        type:
          - 'IGroup[]'
  - uid: office-ui-fabric-react.IGroupDividerProps.indentWidth
    summary: >-
      Width corresponding to a single level. This is multiplied by the groupLevel to get the full spacer width for the
      group.
    name: indentWidth
    fullName: indentWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentWidth?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IGroupDividerProps.isCollapsedGroupSelectVisible
    summary: Determines if the group selection check box is shown for collapsed groups.
    name: isCollapsedGroupSelectVisible
    fullName: isCollapsedGroupSelectVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCollapsedGroupSelectVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IGroupDividerProps.isGroupLoading
    summary: Callback to determine if a group has missing items and needs to load them from the server.
    name: isGroupLoading
    fullName: isGroupLoading
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isGroupLoading?: (group: IGroup) => boolean;'
      return:
        type:
          - '(group: IGroup) => boolean'
  - uid: office-ui-fabric-react.IGroupDividerProps.isSelected
    summary: Deprecated at v.65.1 and will be removed by v 1.0. Use `selected` instead.
    deprecated:
      content: Use `selected` instead.
    name: isSelected
    fullName: isSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelected?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IGroupDividerProps.loadingText
    summary: Text shown on group headers to indicate the group is being loaded.
    name: loadingText
    fullName: loadingText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'loadingText?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IGroupDividerProps.onGroupHeaderClick
    summary: Callback for when the group header is clicked.
    name: onGroupHeaderClick
    fullName: onGroupHeaderClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onGroupHeaderClick?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: office-ui-fabric-react.IGroupDividerProps.onRenderTitle
    summary: Override which allows the caller to provider a custom renderer for the GroupHeader title.
    name: onRenderTitle
    fullName: onRenderTitle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderTitle?: IRenderFunction<IGroupHeaderProps>;'
      return:
        type:
          - IRenderFunction<IGroupHeaderProps>
  - uid: office-ui-fabric-react.IGroupDividerProps.onToggleCollapse
    summary: Callback for when the group is expanded or collapsed.
    name: onToggleCollapse
    fullName: onToggleCollapse
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onToggleCollapse?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: office-ui-fabric-react.IGroupDividerProps.onToggleSelectGroup
    summary: Callback for when the group is selected.
    name: onToggleSelectGroup
    fullName: onToggleSelectGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onToggleSelectGroup?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: office-ui-fabric-react.IGroupDividerProps.onToggleSummarize
    summary: Callback for when the group "Show All" link is clicked
    name: onToggleSummarize
    fullName: onToggleSummarize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onToggleSummarize?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: office-ui-fabric-react.IGroupDividerProps.selected
    summary: If all items in the group are selected.
    name: selected
    fullName: selected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selected?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IGroupDividerProps.selectionMode
    summary: The selection mode of the list the group lives within.
    name: selectionMode
    fullName: selectionMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectionMode?: SelectionMode;'
      return:
        type:
          - office-ui-fabric-react.SelectionMode
  - uid: office-ui-fabric-react.IGroupDividerProps.showAllLinkText
    summary: Text to display for the group "Show All" link.
    name: showAllLinkText
    fullName: showAllLinkText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllLinkText?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IGroupDividerProps.theme
    summary: Theme provided by the Higher Order Component
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - styling.ITheme
  - uid: office-ui-fabric-react.IGroupDividerProps.viewport
    summary: A reference to the viewport in which the header is rendered.
    name: viewport
    fullName: viewport
    langs:
      - typeScript
    type: property
    syntax:
      content: 'viewport?: IViewport;'
      return:
        type:
          - IViewport
