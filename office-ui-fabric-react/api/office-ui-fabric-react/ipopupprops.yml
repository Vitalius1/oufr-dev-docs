### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IPopupProps
    name: IPopupProps
    fullName: IPopupProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.HTMLAttributes<Popup> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IPopupProps.ariaDescribedBy
      - office-ui-fabric-react.IPopupProps.ariaLabel
      - office-ui-fabric-react.IPopupProps.ariaLabelledBy
      - office-ui-fabric-react.IPopupProps.className
      - office-ui-fabric-react.IPopupProps.onDismiss
      - office-ui-fabric-react.IPopupProps.role
      - office-ui-fabric-react.IPopupProps.shouldRestoreFocus
  - uid: office-ui-fabric-react.IPopupProps.ariaDescribedBy
    summary: Defines the element id referencing the element containing the description for the popup.
    name: ariaDescribedBy
    fullName: ariaDescribedBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPopupProps.ariaLabel
    summary: Accessible label text for the popup.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPopupProps.ariaLabelledBy
    summary: Defines the element id referencing the element containing label text for popup.
    name: ariaLabelledBy
    fullName: ariaLabelledBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabelledBy?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPopupProps.className
    summary: Optional class name for the root popup div.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPopupProps.onDismiss
    summary: >-
      A callback function for when the popup is dismissed from the close button or light dismiss. If provided, will
      handle escape keypresses and call this. The event will be stopped/canceled.
    name: onDismiss
    fullName: onDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismiss?: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => any;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => any'
  - uid: office-ui-fabric-react.IPopupProps.role
    summary: Aria role for popup
    name: role
    fullName: role
    langs:
      - typeScript
    type: property
    syntax:
      content: 'role?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPopupProps.shouldRestoreFocus
    summary: >-
      If true, the unmounting of this component will cause focus to be restored to the element that had focus when first
      mounted.
    name: shouldRestoreFocus
    fullName: shouldRestoreFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shouldRestoreFocus?: boolean;'
      return:
        type:
          - boolean
