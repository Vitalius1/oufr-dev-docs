### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.DetailsRowBase
    name: DetailsRowBase
    fullName: DetailsRowBase
    langs:
      - typeScript
    type: class
    extends:
      - 'BaseComponent<IDetailsRowBaseProps, IDetailsRowState> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.DetailsRowBase._onRenderCheck
      - office-ui-fabric-react.DetailsRowBase.(constructor)
      - office-ui-fabric-react.DetailsRowBase.componentDidMount
      - office-ui-fabric-react.DetailsRowBase.componentDidUpdate
      - office-ui-fabric-react.DetailsRowBase.componentWillReceiveProps
      - office-ui-fabric-react.DetailsRowBase.componentWillUnmount
      - office-ui-fabric-react.DetailsRowBase.focus
      - office-ui-fabric-react.DetailsRowBase.measureCell
      - office-ui-fabric-react.DetailsRowBase.render
      - office-ui-fabric-react.DetailsRowBase.shouldComponentUpdate
  - uid: office-ui-fabric-react.DetailsRowBase._onRenderCheck
    name: _onRenderCheck(props)
    fullName: _onRenderCheck(props)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected _onRenderCheck(props: IDetailsRowCheckProps): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
      parameters:
        - id: props
          description: ''
          type:
            - office-ui-fabric-react.IDetailsRowCheckProps
  - uid: office-ui-fabric-react.DetailsRowBase.(constructor)
    summary: Constructs a new instance of the `DetailsRowBase` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: IDetailsRowBaseProps);'
      parameters:
        - id: props
          description: ''
          type:
            - office-ui-fabric-react.IDetailsRowBaseProps
  - uid: office-ui-fabric-react.DetailsRowBase.componentDidMount
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.DetailsRowBase.componentDidUpdate
    name: componentDidUpdate(previousProps)
    fullName: componentDidUpdate(previousProps)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidUpdate(previousProps: IDetailsRowBaseProps): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: previousProps
          description: ''
          type:
            - office-ui-fabric-react.IDetailsRowBaseProps
  - uid: office-ui-fabric-react.DetailsRowBase.componentWillReceiveProps
    name: componentWillReceiveProps(newProps)
    fullName: componentWillReceiveProps(newProps)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillReceiveProps(newProps: IDetailsRowBaseProps): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newProps
          description: ''
          type:
            - office-ui-fabric-react.IDetailsRowBaseProps
  - uid: office-ui-fabric-react.DetailsRowBase.componentWillUnmount
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.DetailsRowBase.focus
    name: focus(forceIntoFirstElement)
    fullName: focus(forceIntoFirstElement)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(forceIntoFirstElement?: boolean): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: forceIntoFirstElement
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.DetailsRowBase.measureCell
    summary: measure cell at index. and call the call back with the measured cell width when finish measure
    name: 'measureCell(index, onMeasureDone)'
    fullName: 'measureCell(index, onMeasureDone)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'measureCell(index: number, onMeasureDone: (width: number) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: index
          description: The cell index
          type:
            - number
        - id: onMeasureDone
          description: The call back function when finish measure
          type:
            - '(width: number) => void'
  - uid: office-ui-fabric-react.DetailsRowBase.render
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: office-ui-fabric-react.DetailsRowBase.shouldComponentUpdate
    name: 'shouldComponentUpdate(nextProps, nextState)'
    fullName: 'shouldComponentUpdate(nextProps, nextState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'shouldComponentUpdate(nextProps: IDetailsRowBaseProps, nextState: IDetailsRowState): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: nextProps
          description: ''
          type:
            - office-ui-fabric-react.IDetailsRowBaseProps
        - id: nextState
          description: ''
          type:
            - office-ui-fabric-react.IDetailsRowState
