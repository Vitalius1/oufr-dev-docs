### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IStackProps
    name: IStackProps
    fullName: IStackProps
    langs:
      - typeScript
    type: interface
    extends:
      - office-ui-fabric-react.IStackSlots
      - 'IStyleableComponentProps<IStackProps, IStackTokens, IStackStyles>'
      - 'React.HTMLAttributes<HTMLElement> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IStackProps.as
      - office-ui-fabric-react.IStackProps.disableShrink
      - office-ui-fabric-react.IStackProps.gap
      - office-ui-fabric-react.IStackProps.grow
      - office-ui-fabric-react.IStackProps.horizontal
      - office-ui-fabric-react.IStackProps.horizontalAlign
      - office-ui-fabric-react.IStackProps.maxHeight
      - office-ui-fabric-react.IStackProps.maxWidth
      - office-ui-fabric-react.IStackProps.padding
      - office-ui-fabric-react.IStackProps.reversed
      - office-ui-fabric-react.IStackProps.verticalAlign
      - office-ui-fabric-react.IStackProps.verticalFill
      - office-ui-fabric-react.IStackProps.wrap
  - uid: office-ui-fabric-react.IStackProps.as
    summary: Defines how to render the Stack.
    name: as
    fullName: as
    langs:
      - typeScript
    type: property
    syntax:
      content: 'as?: React.ReactType<React.HTMLAttributes<HTMLElement>>;'
      return:
        type:
          - React.ReactType<React.HTMLAttributes<HTMLElement>>
  - uid: office-ui-fabric-react.IStackProps.disableShrink
    summary: Defines whether Stack children should not shrink to fit the available space.
    name: disableShrink
    fullName: disableShrink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disableShrink?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IStackProps.gap
    summary: >-
      Defines the spacing between Stack children. The property is specified as a value for 'row gap', followed
      optionally by a value for 'column gap'. If 'column gap' is omitted, it's set to the same value as 'row gap'.
    name: gap
    fullName: gap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gap?: number | string;'
      return:
        type:
          - number | string
  - uid: office-ui-fabric-react.IStackProps.grow
    summary: Defines how much to grow the Stack in proportion to its siblings.
    name: grow
    fullName: grow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'grow?: boolean | number | ''inherit'' | ''initial'' | ''unset'';'
      return:
        type:
          - boolean | number | 'inherit' | 'initial' | 'unset'
  - uid: office-ui-fabric-react.IStackProps.horizontal
    summary: Defines whether to render Stack children horizontally.
    name: horizontal
    fullName: horizontal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontal?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IStackProps.horizontalAlign
    summary: Defines how to align Stack children horizontally (along the x-axis).
    name: horizontalAlign
    fullName: horizontalAlign
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontalAlign?: Alignment;'
      return:
        type:
          - Alignment
  - uid: office-ui-fabric-react.IStackProps.maxHeight
    summary: Defines the maximum height that the Stack can take.
    name: maxHeight
    fullName: maxHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxHeight?: number | string;'
      return:
        type:
          - number | string
  - uid: office-ui-fabric-react.IStackProps.maxWidth
    summary: Defines the maximum width that the Stack can take.
    name: maxWidth
    fullName: maxWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxWidth?: number | string;'
      return:
        type:
          - number | string
  - uid: office-ui-fabric-react.IStackProps.padding
    summary: Defines the inner padding of the Stack.
    name: padding
    fullName: padding
    langs:
      - typeScript
    type: property
    syntax:
      content: 'padding?: number | string;'
      return:
        type:
          - number | string
  - uid: office-ui-fabric-react.IStackProps.reversed
    summary: >-
      Defines whether to render Stack children in the opposite direction (bottom-to-top if it's a vertical Stack and
      right-to-left if it's a horizontal Stack).
    name: reversed
    fullName: reversed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'reversed?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IStackProps.verticalAlign
    summary: Defines how to align Stack children vertically (along the y-axis).
    name: verticalAlign
    fullName: verticalAlign
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlign?: Alignment;'
      return:
        type:
          - Alignment
  - uid: office-ui-fabric-react.IStackProps.verticalFill
    summary: >-
      Defines whether the Stack should take up 100% of the height of its parent. This property is required to be set to
      true when using the `grow` flag on children in vertical oriented Stacks. Stacks are rendered as block elements and
      grow horizontally to the container already.
    name: verticalFill
    fullName: verticalFill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalFill?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IStackProps.wrap
    summary: >-
      Defines whether Stack children should wrap onto multiple rows or columns when they are about to overflow the size
      of the Stack.
    name: wrap
    fullName: wrap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrap?: boolean;'
      return:
        type:
          - boolean
