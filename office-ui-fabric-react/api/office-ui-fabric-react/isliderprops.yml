### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ISliderProps
    name: ISliderProps
    fullName: ISliderProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.ClassAttributes<SliderBase> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.ISliderProps.ariaLabel
      - office-ui-fabric-react.ISliderProps.ariaValueText
      - office-ui-fabric-react.ISliderProps.buttonProps
      - office-ui-fabric-react.ISliderProps.className
      - office-ui-fabric-react.ISliderProps.componentRef
      - office-ui-fabric-react.ISliderProps.defaultValue
      - office-ui-fabric-react.ISliderProps.disabled
      - office-ui-fabric-react.ISliderProps.label
      - office-ui-fabric-react.ISliderProps.max
      - office-ui-fabric-react.ISliderProps.min
      - office-ui-fabric-react.ISliderProps.onChange
      - office-ui-fabric-react.ISliderProps.onChanged
      - office-ui-fabric-react.ISliderProps.showValue
      - office-ui-fabric-react.ISliderProps.step
      - office-ui-fabric-react.ISliderProps.styles
      - office-ui-fabric-react.ISliderProps.theme
      - office-ui-fabric-react.ISliderProps.value
      - office-ui-fabric-react.ISliderProps.valueFormat
      - office-ui-fabric-react.ISliderProps.vertical
  - uid: office-ui-fabric-react.ISliderProps.ariaLabel
    summary: A description of the Slider for the benefit of screen readers.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISliderProps.ariaValueText
    summary: >-
      A text description of the Slider number value for the benefit of screen readers. This should be used when the
      Slider number value is not accurately represented by a number.
    name: ariaValueText
    fullName: ariaValueText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaValueText?: (value: number) => string;'
      return:
        type:
          - '(value: number) => string'
  - uid: office-ui-fabric-react.ISliderProps.buttonProps
    summary: Optional mixin for additional props on the thumb button within the slider.
    name: buttonProps
    fullName: buttonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'buttonProps?: React.HTMLAttributes<HTMLButtonElement>;'
      return:
        type:
          - React.HTMLAttributes<HTMLButtonElement>
  - uid: office-ui-fabric-react.ISliderProps.className
    summary: Optional className to attach to the slider root element.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISliderProps.componentRef
    summary: >-
      Optional callback to access the ISlider interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ISlider>;'
      return:
        type:
          - IRefObject<ISlider>
  - uid: office-ui-fabric-react.ISliderProps.defaultValue
    summary: >-
      The initial value of the Slider. Use this if you intend for the Slider to be an uncontrolled component. This value
      is mutually exclusive to value. Use one or the other.
    name: defaultValue
    fullName: defaultValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultValue?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.ISliderProps.disabled
    summary: Optional flag to render the Slider as disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.ISliderProps.label
    summary: Description label of the Slider
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISliderProps.max
    summary: The max value of the Slider
    name: max
    fullName: max
    langs:
      - typeScript
    type: property
    syntax:
      content: 'max?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.ISliderProps.min
    summary: The min value of the Slider
    name: min
    fullName: min
    langs:
      - typeScript
    type: property
    syntax:
      content: 'min?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.ISliderProps.onChange
    summary: Callback when the value has been changed
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (value: number) => void;'
      return:
        type:
          - '(value: number) => void'
  - uid: office-ui-fabric-react.ISliderProps.onChanged
    summary: Callback on mouse up or touch end
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChanged?: (event: MouseEvent | TouchEvent, value: number) => void;'
      return:
        type:
          - '(event: MouseEvent | TouchEvent, value: number) => void'
  - uid: office-ui-fabric-react.ISliderProps.showValue
    summary: Whether to show the value on the right of the Slider.
    name: showValue
    fullName: showValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showValue?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.ISliderProps.step
    summary: The difference between the two adjacent values of the Slider
    name: step
    fullName: step
    langs:
      - typeScript
    type: property
    syntax:
      content: 'step?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.ISliderProps.styles
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ISliderStyleProps, ISliderStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ISliderStyleProps, ISliderStyles>'
  - uid: office-ui-fabric-react.ISliderProps.theme
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - styling.ITheme
  - uid: office-ui-fabric-react.ISliderProps.value
    summary: >-
      The initial value of the Slider. Use this if you intend to pass in a new value as a result of onChange events.
      This value is mutually exclusive to defaultValue. Use one or the other.
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.ISliderProps.valueFormat
    summary: Optional function to format the slider value.
    name: valueFormat
    fullName: valueFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'valueFormat?: (value: number) => string;'
      return:
        type:
          - '(value: number) => string'
  - uid: office-ui-fabric-react.ISliderProps.vertical
    summary: Optional flag to render the slider vertically. Defaults to rendering horizontal.
    name: vertical
    fullName: vertical
    langs:
      - typeScript
    type: property
    syntax:
      content: 'vertical?: boolean;'
      return:
        type:
          - boolean
