### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IPivotProps
    name: IPivotProps
    fullName: IPivotProps
    langs:
      - typeScript
    type: interface
    extends:
      - React.ClassAttributes<PivotBase>
      - 'React.HTMLAttributes<HTMLDivElement> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IPivotProps.className
      - office-ui-fabric-react.IPivotProps.componentRef
      - office-ui-fabric-react.IPivotProps.defaultSelectedIndex
      - office-ui-fabric-react.IPivotProps.defaultSelectedKey
      - office-ui-fabric-react.IPivotProps.getTabId
      - office-ui-fabric-react.IPivotProps.headersOnly
      - office-ui-fabric-react.IPivotProps.initialSelectedIndex
      - office-ui-fabric-react.IPivotProps.initialSelectedKey
      - office-ui-fabric-react.IPivotProps.linkFormat
      - office-ui-fabric-react.IPivotProps.linkSize
      - office-ui-fabric-react.IPivotProps.onLinkClick
      - office-ui-fabric-react.IPivotProps.selectedKey
      - office-ui-fabric-react.IPivotProps.styles
      - office-ui-fabric-react.IPivotProps.theme
  - uid: office-ui-fabric-react.IPivotProps.className
    summary: Additional css class to apply to the Pivot
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPivotProps.componentRef
    summary: >-
      Optional callback to access the IPivot interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IPivot>;'
      return:
        type:
          - IRefObject<IPivot>
  - uid: office-ui-fabric-react.IPivotProps.defaultSelectedIndex
    summary: >-
      Default selected index for the pivot. Only provide this if the pivot is an uncontrolled component; otherwise, use
      the `selectedKey` property.


      This property is also mutually exclusive with `defaultSelectedKey`<!-- -->.
    name: defaultSelectedIndex
    fullName: defaultSelectedIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultSelectedIndex?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IPivotProps.defaultSelectedKey
    summary: >-
      Default selected key for the pivot. Only provide this if the pivot is an uncontrolled component; otherwise, use
      the `selectedKey` property.


      This property is also mutually exclusive with `defaultSelectedIndex`<!-- -->.
    name: defaultSelectedKey
    fullName: defaultSelectedKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultSelectedKey?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPivotProps.getTabId
    summary: >-
      Callback to customize how IDs are generated for each tab header. Useful if you're rendering content outside and
      need to connect aria-labelledby.
    name: getTabId
    fullName: getTabId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getTabId?: (itemKey: string, index: number) => string;'
      return:
        type:
          - '(itemKey: string, index: number) => string'
  - uid: office-ui-fabric-react.IPivotProps.headersOnly
    summary: >-
      Whether to skip rendering the tabpanel with the content of the selected tab. Use this prop if you plan to
      separately render the tab content and don't want to leave an empty tabpanel in the page that may confuse Screen
      Readers.
    name: headersOnly
    fullName: headersOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headersOnly?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IPivotProps.initialSelectedIndex
    summary: >-
      Index of the pivot item initially selected. Mutually exclusive with `initialSelectedKey`<!-- -->. Only provide
      this if the pivot is an uncontrolled component; otherwise, use `selectedKey`<!-- -->.
    deprecated:
      content: Use `defaultSelectedIndex`
    name: initialSelectedIndex
    fullName: initialSelectedIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'initialSelectedIndex?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IPivotProps.initialSelectedKey
    summary: >-
      Key of the pivot item initially selected. Mutually exclusive with `initialSelectedIndex`<!-- -->. Only provide
      this if the pivot is an uncontrolled component; otherwise, use `selectedKey`<!-- -->.
    deprecated:
      content: Use `defaultSelectedKey`
    name: initialSelectedKey
    fullName: initialSelectedKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'initialSelectedKey?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IPivotProps.linkFormat
    summary: 'PivotLinkFormat to use (links, tabs)'
    name: linkFormat
    fullName: linkFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'linkFormat?: PivotLinkFormat;'
      return:
        type:
          - office-ui-fabric-react.PivotLinkFormat
  - uid: office-ui-fabric-react.IPivotProps.linkSize
    summary: 'PivotLinkSize to use (normal, large)'
    name: linkSize
    fullName: linkSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'linkSize?: PivotLinkSize;'
      return:
        type:
          - office-ui-fabric-react.PivotLinkSize
  - uid: office-ui-fabric-react.IPivotProps.onLinkClick
    summary: Callback for when the selected pivot item is changed.
    name: onLinkClick
    fullName: onLinkClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onLinkClick?: (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => void;'
      return:
        type:
          - '(item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => void'
  - uid: office-ui-fabric-react.IPivotProps.selectedKey
    summary: >-
      Key of the selected pivot item. Updating this will override the Pivot's selected item state. Only provide this if
      the pivot is a controlled component where you are maintaining the current state; otherwise, use
      `defaultSelectedKey`<!-- -->.
    name: selectedKey
    fullName: selectedKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedKey?: string | null;'
      return:
        type:
          - string | null
  - uid: office-ui-fabric-react.IPivotProps.styles
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IPivotStyleProps, IPivotStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IPivotStyleProps, IPivotStyles>'
  - uid: office-ui-fabric-react.IPivotProps.theme
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - styling.ITheme
