### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IColorPickerGridCellProps
    name: IColorPickerGridCellProps
    fullName: IColorPickerGridCellProps
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IColorPickerGridCellProps.borderWidth
      - office-ui-fabric-react.IColorPickerGridCellProps.circle
      - office-ui-fabric-react.IColorPickerGridCellProps.color
      - office-ui-fabric-react.IColorPickerGridCellProps.disabled
      - office-ui-fabric-react.IColorPickerGridCellProps.height
      - office-ui-fabric-react.IColorPickerGridCellProps.id
      - office-ui-fabric-react.IColorPickerGridCellProps.index
      - office-ui-fabric-react.IColorPickerGridCellProps.item
      - office-ui-fabric-react.IColorPickerGridCellProps.label
      - office-ui-fabric-react.IColorPickerGridCellProps.onClick
      - office-ui-fabric-react.IColorPickerGridCellProps.onFocus
      - office-ui-fabric-react.IColorPickerGridCellProps.onHover
      - office-ui-fabric-react.IColorPickerGridCellProps.onKeyDown
      - office-ui-fabric-react.IColorPickerGridCellProps.onMouseEnter
      - office-ui-fabric-react.IColorPickerGridCellProps.onMouseLeave
      - office-ui-fabric-react.IColorPickerGridCellProps.onMouseMove
      - office-ui-fabric-react.IColorPickerGridCellProps.onWheel
      - office-ui-fabric-react.IColorPickerGridCellProps.selected
      - office-ui-fabric-react.IColorPickerGridCellProps.styles
      - office-ui-fabric-react.IColorPickerGridCellProps.theme
      - office-ui-fabric-react.IColorPickerGridCellProps.width
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.borderWidth
    summary: >-
      Width of the border that indicates a selected/hovered cell, in pixels. If `cellWidth` is less than 24px, then
      default value is 2px. Otherwise it defaults to 4px.
    name: borderWidth
    fullName: borderWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderWidth?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.circle
    summary: Wheter or not colorOption should be rendered as a circle or square.
    name: circle
    fullName: circle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'circle?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.color
    summary: The CSS-compatible string to describe the color
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.disabled
    summary: 'Optional, if the this option should be disabled'
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.height
    summary: 'Height of the cell, in pixels'
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.id
    summary: Arbitrary unique string associated with this option
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.index
    summary: Index for this option
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'index?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.item
    summary: Item to render
    name: item
    fullName: item
    langs:
      - typeScript
    type: property
    syntax:
      content: 'item: IColorCellProps;'
      return:
        type:
          - office-ui-fabric-react.IColorCellProps
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.label
    summary: 'The label for this item. Visible text if this item is a header, tooltip if is this item is normal'
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onClick
    summary: The on click handler
    name: onClick
    fullName: onClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onClick?: (item: IColorCellProps) => void;'
      return:
        type:
          - '(item: IColorCellProps) => void'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onFocus
    summary: 'Optional, the onFocus handler'
    name: onFocus
    fullName: onFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onFocus?: (item: IColorCellProps) => void;'
      return:
        type:
          - '(item: IColorCellProps) => void'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onHover
    summary: 'Optional, the onHover handler'
    name: onHover
    fullName: onHover
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onHover?: (item?: IColorCellProps) => void;'
      return:
        type:
          - '(item?: IColorCellProps) => void'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onKeyDown
    summary: 'Optional, onkeydown handler'
    name: onKeyDown
    fullName: onKeyDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onKeyDown?: (ev: React.KeyboardEvent<HTMLButtonElement>) => void;'
      return:
        type:
          - '(ev: React.KeyboardEvent<HTMLButtonElement>) => void'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onMouseEnter
    summary: 'Optional, mouseEnter handler.'
    name: onMouseEnter
    fullName: onMouseEnter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseEnter?: (ev: React.MouseEvent<HTMLButtonElement>) => boolean;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => boolean'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onMouseLeave
    summary: 'Optional, mouseLeave handler'
    name: onMouseLeave
    fullName: onMouseLeave
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseLeave?: (ev: React.MouseEvent<HTMLButtonElement>) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => void'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onMouseMove
    summary: 'Optional, mouseMove handler'
    name: onMouseMove
    fullName: onMouseMove
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseMove?: (ev: React.MouseEvent<HTMLButtonElement>) => boolean;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => boolean'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.onWheel
    summary: 'Optional, onWheel handler'
    name: onWheel
    fullName: onWheel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onWheel?: (ev: React.MouseEvent<HTMLButtonElement>) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => void'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.selected
    summary: 'Optional, if the cell is currently selected'
    name: selected
    fullName: selected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selected: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.styles
    summary: Optional styles for the component.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>'
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.theme
    summary: The theme object to use for styling.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - styling.ITheme
  - uid: office-ui-fabric-react.IColorPickerGridCellProps.width
    summary: 'Width of the cell, in pixels'
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width?: number;'
      return:
        type:
          - number
