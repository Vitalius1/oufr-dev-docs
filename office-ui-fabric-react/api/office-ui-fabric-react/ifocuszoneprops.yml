### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IFocusZoneProps
    summary: FocusZone component props.
    name: IFocusZoneProps
    fullName: IFocusZoneProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.HTMLAttributes<HTMLElement | FocusZone> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IFocusZoneProps.allowFocusRoot
      - office-ui-fabric-react.IFocusZoneProps.allowTabKey
      - office-ui-fabric-react.IFocusZoneProps.ariaDescribedBy
      - office-ui-fabric-react.IFocusZoneProps.ariaLabelledBy
      - office-ui-fabric-react.IFocusZoneProps.as
      - office-ui-fabric-react.IFocusZoneProps.checkForNoWrap
      - office-ui-fabric-react.IFocusZoneProps.className
      - office-ui-fabric-react.IFocusZoneProps.componentRef
      - office-ui-fabric-react.IFocusZoneProps.defaultActiveElement
      - office-ui-fabric-react.IFocusZoneProps.direction
      - office-ui-fabric-react.IFocusZoneProps.disabled
      - office-ui-fabric-react.IFocusZoneProps.doNotAllowFocusEventToPropagate
      - office-ui-fabric-react.IFocusZoneProps.elementType
      - office-ui-fabric-react.IFocusZoneProps.handleTabKey
      - office-ui-fabric-react.IFocusZoneProps.isCircularNavigation
      - office-ui-fabric-react.IFocusZoneProps.isInnerZoneKeystroke
      - office-ui-fabric-react.IFocusZoneProps.onActiveElementChanged
      - office-ui-fabric-react.IFocusZoneProps.onBeforeFocus
      - office-ui-fabric-react.IFocusZoneProps.onFocusNotification
      - office-ui-fabric-react.IFocusZoneProps.rootProps
      - office-ui-fabric-react.IFocusZoneProps.shouldInputLoseFocusOnArrowKey
  - uid: office-ui-fabric-react.IFocusZoneProps.allowFocusRoot
    summary: Allow focus to move to root
    name: allowFocusRoot
    fullName: allowFocusRoot
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allowFocusRoot?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IFocusZoneProps.allowTabKey
    summary: >-
      Allows tab key to be handled to tab through a list of items in the focus zone, an unfortunate side effect is that
      users will not be able to tab out of the focus zone and have to hit escape or some other key.
    deprecated:
      content: Use `handleTabKey` instead.
    name: allowTabKey
    fullName: allowTabKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allowTabKey?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IFocusZoneProps.ariaDescribedBy
    summary: Sets the aria-describedby attribute.
    name: ariaDescribedBy
    fullName: ariaDescribedBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IFocusZoneProps.ariaLabelledBy
    summary: Sets the aria-labelledby attribute.
    name: ariaLabelledBy
    fullName: ariaLabelledBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabelledBy?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IFocusZoneProps.as
    summary: A component that should be used as the root element of the FocusZone component.
    name: as
    fullName: as
    langs:
      - typeScript
    type: property
    syntax:
      content: 'as?: React.ReactType;'
      return:
        type:
          - React.ReactType
  - uid: office-ui-fabric-react.IFocusZoneProps.checkForNoWrap
    summary: >-
      Whether the to check for data-no-horizontal-wrap or data-no-vertical-wrap attributes when determining how to move
      focus
    name: checkForNoWrap
    fullName: checkForNoWrap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'checkForNoWrap?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IFocusZoneProps.className
    summary: 'Additional class name to provide on the root element, in addition to the ms-FocusZone class.'
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IFocusZoneProps.componentRef
    summary: >-
      Optional callback to access the IFocusZone interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IFocusZone>;'
      return:
        type:
          - IRefObject<IFocusZone>
  - uid: office-ui-fabric-react.IFocusZoneProps.defaultActiveElement
    summary: Optionally provide a selector for identifying the intial active element.
    name: defaultActiveElement
    fullName: defaultActiveElement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultActiveElement?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IFocusZoneProps.direction
    summary: Defines which arrows to react to.
    name: direction
    fullName: direction
    langs:
      - typeScript
    type: property
    syntax:
      content: 'direction?: FocusZoneDirection;'
      return:
        type:
          - office-ui-fabric-react.FocusZoneDirection
  - uid: office-ui-fabric-react.IFocusZoneProps.disabled
    summary: >-
      If set, the FocusZone will not be tabbable and keyboard navigation will be disabled. This does not affect disabled
      attribute of any child.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IFocusZoneProps.doNotAllowFocusEventToPropagate
    summary: Whether the FocusZone should allow focus events to propagate past the FocusZone
    name: doNotAllowFocusEventToPropagate
    fullName: doNotAllowFocusEventToPropagate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doNotAllowFocusEventToPropagate?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IFocusZoneProps.elementType
    summary: Element type the root element will use. Default is "div".
    deprecated:
      content: Use 'as' instead.
    name: elementType
    fullName: elementType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'elementType?: keyof React.ReactHTML;'
      return:
        type:
          - keyof React.ReactHTML
  - uid: office-ui-fabric-react.IFocusZoneProps.handleTabKey
    summary: >-
      Allows tab key to be handled to tab through a list of items in the focus zone, an unfortunate side effect is that
      users will not be able to tab out of the focus zone and have to hit escape or some other key.
    name: handleTabKey
    fullName: handleTabKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'handleTabKey?: FocusZoneTabbableElements;'
      return:
        type:
          - FocusZoneTabbableElements
  - uid: office-ui-fabric-react.IFocusZoneProps.isCircularNavigation
    summary: >-
      If set, will cycle to the beginning of the targets once the user navigates to the next target while at the end,
      and to the end when navigate to the previous at the beginning.
    name: isCircularNavigation
    fullName: isCircularNavigation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCircularNavigation?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IFocusZoneProps.isInnerZoneKeystroke
    summary: >-
      If provided, this callback will be executed on keypresses to determine if the user intends to navigate into the
      inner zone. Returning true will ask the first inner zone to set focus.
    name: isInnerZoneKeystroke
    fullName: isInnerZoneKeystroke
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isInnerZoneKeystroke?: (ev: React.KeyboardEvent<HTMLElement>) => boolean;'
      return:
        type:
          - '(ev: React.KeyboardEvent<HTMLElement>) => boolean'
  - uid: office-ui-fabric-react.IFocusZoneProps.onActiveElementChanged
    summary: >-
      Callback for when one of immediate children elements gets active by getting focused or by having one of its
      respective children elements focused.
    name: onActiveElementChanged
    fullName: onActiveElementChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onActiveElementChanged?: (element?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void;'
      return:
        type:
          - '(element?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void'
  - uid: office-ui-fabric-react.IFocusZoneProps.onBeforeFocus
    summary: Callback method for determining if focus should indeed be set on the given element.
    name: onBeforeFocus
    fullName: onBeforeFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onBeforeFocus?: (childElement?: HTMLElement) => boolean;'
      return:
        type:
          - '(childElement?: HTMLElement) => boolean'
  - uid: office-ui-fabric-react.IFocusZoneProps.onFocusNotification
    summary: Callback to notify creators that focus has been set on the FocusZone
    name: onFocusNotification
    fullName: onFocusNotification
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onFocusNotification?: () => void;'
      return:
        type:
          - () => void
  - uid: office-ui-fabric-react.IFocusZoneProps.rootProps
    summary: Deprecated at v1.12.1. DIV props provided to the FocusZone will be mixed into the root element.
    deprecated:
      content: DIV props provided to the FocusZone will be mixed into the root element.
    name: rootProps
    fullName: rootProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rootProps?: React.HTMLAttributes<HTMLDivElement>;'
      return:
        type:
          - React.HTMLAttributes<HTMLDivElement>
  - uid: office-ui-fabric-react.IFocusZoneProps.shouldInputLoseFocusOnArrowKey
    summary: A callback method to determine if the input element should lose focus on arrow keys
    name: shouldInputLoseFocusOnArrowKey
    fullName: shouldInputLoseFocusOnArrowKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shouldInputLoseFocusOnArrowKey?: (inputElement: HTMLInputElement) => boolean;'
      return:
        type:
          - '(inputElement: HTMLInputElement) => boolean'
