### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IColumnReorderOptions
    name: IColumnReorderOptions
    fullName: IColumnReorderOptions
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromEnd
      - office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromStart
      - office-ui-fabric-react.IColumnReorderOptions.handleColumnReorder
      - office-ui-fabric-react.IColumnReorderOptions.onColumnDragStart
      - office-ui-fabric-react.IColumnReorderOptions.onColumnDrop
      - office-ui-fabric-react.IColumnReorderOptions.onDragEnd
  - uid: office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromEnd
    summary: Specifies the number fixed columns from right
    name: frozenColumnCountFromEnd
    fullName: frozenColumnCountFromEnd
    langs:
      - typeScript
    type: property
    syntax:
      content: 'frozenColumnCountFromEnd?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromStart
    summary: Specifies the number fixed columns from left(0th index)
    name: frozenColumnCountFromStart
    fullName: frozenColumnCountFromStart
    langs:
      - typeScript
    type: property
    syntax:
      content: 'frozenColumnCountFromStart?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IColumnReorderOptions.handleColumnReorder
    summary: >-
      Callback to handle the column reorder draggedIndex is the source column index, that need to be placed in
      targetIndex Deprecated, use `onColumnDrop` instead.
    deprecated:
      content: Use `onColumnDrop` instead.
    name: handleColumnReorder
    fullName: handleColumnReorder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'handleColumnReorder?: (draggedIndex: number, targetIndex: number) => void;'
      return:
        type:
          - '(draggedIndex: number, targetIndex: number) => void'
  - uid: office-ui-fabric-react.IColumnReorderOptions.onColumnDragStart
    summary: >-
      Callback to handle the column dragstart draggedStarted indicates that the column drag has been started on
      DetailsHeader
    name: onColumnDragStart
    fullName: onColumnDragStart
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onColumnDragStart?: (dragStarted: boolean) => void;'
      return:
        type:
          - '(dragStarted: boolean) => void'
  - uid: office-ui-fabric-react.IColumnReorderOptions.onColumnDrop
    summary: >-
      Callback to handle the column reorder draggedIndex is the source column index, that need to be placed in
      targetIndex
    name: onColumnDrop
    fullName: onColumnDrop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onColumnDrop?: (dragDropDetails: IColumnDragDropDetails) => void;'
      return:
        type:
          - '(dragDropDetails: IColumnDragDropDetails) => void'
  - uid: office-ui-fabric-react.IColumnReorderOptions.onDragEnd
    summary: Callback to handle the column reorder
    name: onDragEnd
    fullName: onDragEnd
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDragEnd?: (columnDropLocationDetails: ColumnDragEndLocation) => void;'
      return:
        type:
          - '(columnDropLocationDetails: ColumnDragEndLocation) => void'
