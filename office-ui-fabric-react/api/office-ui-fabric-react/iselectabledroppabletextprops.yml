### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps
    summary: >-
      TComponent - Component used for reference properties, such as componentRef TListenerElement - Listener element
      associated with HTML event callbacks. Optional. If not provided, TComponent is assumed.
    name: ISelectableDroppableTextProps
    fullName: ISelectableDroppableTextProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.HTMLAttributes<TListenerElement> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.ISelectableDroppableTextProps.ariaLabel
      - office-ui-fabric-react.ISelectableDroppableTextProps.calloutProps
      - office-ui-fabric-react.ISelectableDroppableTextProps.className
      - office-ui-fabric-react.ISelectableDroppableTextProps.componentRef
      - office-ui-fabric-react.ISelectableDroppableTextProps.defaultSelectedKey
      - office-ui-fabric-react.ISelectableDroppableTextProps.disabled
      - office-ui-fabric-react.ISelectableDroppableTextProps.errorMessage
      - office-ui-fabric-react.ISelectableDroppableTextProps.id
      - office-ui-fabric-react.ISelectableDroppableTextProps.label
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderContainer
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderItem
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderList
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderOption
      - office-ui-fabric-react.ISelectableDroppableTextProps.options
      - office-ui-fabric-react.ISelectableDroppableTextProps.panelProps
      - office-ui-fabric-react.ISelectableDroppableTextProps.placeholder
      - office-ui-fabric-react.ISelectableDroppableTextProps.required
      - office-ui-fabric-react.ISelectableDroppableTextProps.selectedKey
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.ariaLabel
    summary: Aria Label for the ISelectableDroppableText for screen reader users.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.calloutProps
    summary: Custom properties for ISelectableDroppableText's Callout used to render options.
    name: calloutProps
    fullName: calloutProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calloutProps?: ICalloutProps;'
      return:
        type:
          - office-ui-fabric-react.ICalloutProps
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.className
    summary: 'If provided, additional class name to provide on the root element.'
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.componentRef
    summary: >-
      Optional callback to access the ISelectableDroppableText interface. Use this instead of ref for accessing the
      public methods and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<TComponent>;'
      return:
        type:
          - IRefObject<TComponent>
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.defaultSelectedKey
    summary: The key(s) that will be initially used to set a selected item.
    name: defaultSelectedKey
    fullName: defaultSelectedKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultSelectedKey?: string | number | string[] | number[] | null;'
      return:
        type:
          - 'string | number | string[] | number[] | null'
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.disabled
    summary: Whether or not the ISelectableDroppableText is disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.errorMessage
    summary: Descriptive label for the ISelectableDroppableText Error Message
    name: errorMessage
    fullName: errorMessage
    langs:
      - typeScript
    type: property
    syntax:
      content: 'errorMessage?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.id
    summary: Id of the ISelectableDroppableText
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.label
    summary: Descriptive label for the ISelectableDroppableText
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderContainer
    summary: Optional custom renderer for the ISelectableDroppableText container
    name: onRenderContainer
    fullName: onRenderContainer
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderContainer?: IRenderFunction<ISelectableDroppableTextProps<TComponent>>;'
      return:
        type:
          - IRenderFunction<ISelectableDroppableTextProps<TComponent>>
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderItem
    summary: Optional custom renderer for the ISelectableDroppableText options
    name: onRenderItem
    fullName: onRenderItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderItem?: IRenderFunction<ISelectableOption>;'
      return:
        type:
          - IRenderFunction<ISelectableOption>
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderList
    summary: Optional custom renderer for the ISelectableDroppableText list
    name: onRenderList
    fullName: onRenderList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderList?: IRenderFunction<ISelectableDroppableTextProps<TComponent>>;'
      return:
        type:
          - IRenderFunction<ISelectableDroppableTextProps<TComponent>>
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderOption
    summary: Optional custom renderer for the ISelectableDroppableText option content
    name: onRenderOption
    fullName: onRenderOption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderOption?: IRenderFunction<ISelectableOption>;'
      return:
        type:
          - IRenderFunction<ISelectableOption>
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.options
    summary: Collection of options for this ISelectableDroppableText
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'options?: any;'
      return:
        type:
          - any
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.panelProps
    summary: Custom properties for ISelectableDroppableText's Panel used to render options on small devices.
    name: panelProps
    fullName: panelProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'panelProps?: IPanelProps;'
      return:
        type:
          - office-ui-fabric-react.IPanelProps
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.placeholder
    summary: Input placeholder text. Displayed until option is selected.
    name: placeholder
    fullName: placeholder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeholder?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.required
    summary: Whether or not the ISelectableDroppableText is required.
    name: required
    fullName: required
    langs:
      - typeScript
    type: property
    syntax:
      content: 'required?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.selectedKey
    summary: >-
      The key(s) of the selected item. If you provide this, you must maintain selection state by observing onChange
      events and passing a new value in when changed. Note that passing in `null` will cause selection to be reset.
    name: selectedKey
    fullName: selectedKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedKey?: string | number | string[] | number[] | null;'
      return:
        type:
          - 'string | number | string[] | number[] | null'
