### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IBasePickerProps
    name: IBasePickerProps
    fullName: IBasePickerProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.Props<any> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.IBasePickerProps.className
      - office-ui-fabric-react.IBasePickerProps.componentRef
      - office-ui-fabric-react.IBasePickerProps.createGenericItem
      - office-ui-fabric-react.IBasePickerProps.defaultSelectedItems
      - office-ui-fabric-react.IBasePickerProps.disabled
      - office-ui-fabric-react.IBasePickerProps.enableSelectedSuggestionAlert
      - office-ui-fabric-react.IBasePickerProps.getTextFromItem
      - office-ui-fabric-react.IBasePickerProps.inputProps
      - office-ui-fabric-react.IBasePickerProps.itemLimit
      - office-ui-fabric-react.IBasePickerProps.onBlur
      - office-ui-fabric-react.IBasePickerProps.onChange
      - office-ui-fabric-react.IBasePickerProps.onDismiss
      - office-ui-fabric-react.IBasePickerProps.onEmptyInputFocus
      - office-ui-fabric-react.IBasePickerProps.onFocus
      - office-ui-fabric-react.IBasePickerProps.onGetMoreResults
      - office-ui-fabric-react.IBasePickerProps.onInputChange
      - office-ui-fabric-react.IBasePickerProps.onItemSelected
      - office-ui-fabric-react.IBasePickerProps.onRemoveSuggestion
      - office-ui-fabric-react.IBasePickerProps.onRenderItem
      - office-ui-fabric-react.IBasePickerProps.onRenderSuggestionsItem
      - office-ui-fabric-react.IBasePickerProps.onResolveSuggestions
      - office-ui-fabric-react.IBasePickerProps.onValidateInput
      - office-ui-fabric-react.IBasePickerProps.pickerCalloutProps
      - office-ui-fabric-react.IBasePickerProps.pickerSuggestionsProps
      - office-ui-fabric-react.IBasePickerProps.removeButtonAriaLabel
      - office-ui-fabric-react.IBasePickerProps.resolveDelay
      - office-ui-fabric-react.IBasePickerProps.searchingText
      - office-ui-fabric-react.IBasePickerProps.selectedItems
      - office-ui-fabric-react.IBasePickerProps.styles
      - office-ui-fabric-react.IBasePickerProps.theme
  - uid: office-ui-fabric-react.IBasePickerProps.className
    summary: ClassName for the picker.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IBasePickerProps.componentRef
    summary: >-
      Optional callback to access the IBasePicker interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IBasePicker<T>>;'
      return:
        type:
          - IRefObject<IBasePicker<T>>
  - uid: office-ui-fabric-react.IBasePickerProps.createGenericItem
    summary: Function that specifies how arbitrary text entered into the well is handled.
    name: createGenericItem
    fullName: createGenericItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'createGenericItem?: (input: string, ValidationState: ValidationState) => ISuggestionModel<T> | T;'
      return:
        type:
          - '(input: string, ValidationState: ValidationState) => ISuggestionModel<T> | T'
  - uid: office-ui-fabric-react.IBasePickerProps.defaultSelectedItems
    summary: Initial items that have already been selected and should appear in the people picker.
    name: defaultSelectedItems
    fullName: defaultSelectedItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultSelectedItems?: T[];'
      return:
        type:
          - 'T[]'
  - uid: office-ui-fabric-react.IBasePickerProps.disabled
    summary: Flag for disabling the picker.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IBasePickerProps.enableSelectedSuggestionAlert
    summary: >-
      Adds an additional alert for the currently selected suggestion. This prop should be set to true for IE11 and
      below, as it enables proper screen reader behavior for each suggestion (since aria-activedescendant does not work
      with IE11). It should not be set for modern browsers (Edge, Chrome).
    name: enableSelectedSuggestionAlert
    fullName: enableSelectedSuggestionAlert
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableSelectedSuggestionAlert?: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.IBasePickerProps.getTextFromItem
    summary: A callback to get text from an item. Used to autofill text in the pickers.
    name: getTextFromItem
    fullName: getTextFromItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getTextFromItem?: (item: T, currentValue?: string) => string;'
      return:
        type:
          - '(item: T, currentValue?: string) => string'
  - uid: office-ui-fabric-react.IBasePickerProps.inputProps
    summary: AutoFill input native props
    name: inputProps
    fullName: inputProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'inputProps?: IInputProps;'
      return:
        type:
          - office-ui-fabric-react.IInputProps
  - uid: office-ui-fabric-react.IBasePickerProps.itemLimit
    summary: Restrict the amount of selectable items.
    name: itemLimit
    fullName: itemLimit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemLimit?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IBasePickerProps.onBlur
    summary: A callback for when the user moves the focus away from the picker
    name: onBlur
    fullName: onBlur
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onBlur?: React.FocusEventHandler<HTMLInputElement | BaseAutoFill>;'
      return:
        type:
          - React.FocusEventHandler<HTMLInputElement | BaseAutoFill>
  - uid: office-ui-fabric-react.IBasePickerProps.onChange
    summary: A callback for when the selected list of items changes.
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (items?: T[]) => void;'
      return:
        type:
          - '(items?: T[]) => void'
  - uid: office-ui-fabric-react.IBasePickerProps.onDismiss
    summary: A callback to override the default behavior of adding the selected suggestion on dismiss.
    name: onDismiss
    fullName: onDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismiss?: (ev?: any, selectedItem?: T) => void;'
      return:
        type:
          - '(ev?: any, selectedItem?: T) => void'
  - uid: office-ui-fabric-react.IBasePickerProps.onEmptyInputFocus
    summary: A callback for what should happen when a user clicks the input.
    name: onEmptyInputFocus
    fullName: onEmptyInputFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onEmptyInputFocus?: (selectedItems?: T[]) => T[] | PromiseLike<T[]>;'
      return:
        type:
          - '(selectedItems?: T[]) => T[] | PromiseLike<T[]>'
  - uid: office-ui-fabric-react.IBasePickerProps.onFocus
    summary: A callback for when the user put focus on the picker
    name: onFocus
    fullName: onFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onFocus?: React.FocusEventHandler<HTMLInputElement | BaseAutoFill>;'
      return:
        type:
          - React.FocusEventHandler<HTMLInputElement | BaseAutoFill>
  - uid: office-ui-fabric-react.IBasePickerProps.onGetMoreResults
    summary: A callback that gets the rest of the results when a user clicks get more results.
    name: onGetMoreResults
    fullName: onGetMoreResults
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onGetMoreResults?: (filter: string, selectedItems?: T[]) => T[] | PromiseLike<T[]>;'
      return:
        type:
          - '(filter: string, selectedItems?: T[]) => T[] | PromiseLike<T[]>'
  - uid: office-ui-fabric-react.IBasePickerProps.onInputChange
    summary: A callback used to modify the input string.
    name: onInputChange
    fullName: onInputChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onInputChange?: (input: string) => string;'
      return:
        type:
          - '(input: string) => string'
  - uid: office-ui-fabric-react.IBasePickerProps.onItemSelected
    summary: >-
      A callback to process a selection after the user selects something from the picker. If the callback returns null,
      the item will not be added to the picker.
    name: onItemSelected
    fullName: onItemSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onItemSelected?: (selectedItem?: T) => T | PromiseLike<T> | null;'
      return:
        type:
          - '(selectedItem?: T) => T | PromiseLike<T> | null'
  - uid: office-ui-fabric-react.IBasePickerProps.onRemoveSuggestion
    summary: A callback for when an item is removed from the suggestion list
    name: onRemoveSuggestion
    fullName: onRemoveSuggestion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRemoveSuggestion?: (item: T) => void;'
      return:
        type:
          - '(item: T) => void'
  - uid: office-ui-fabric-react.IBasePickerProps.onRenderItem
    summary: Function that specifies how the selected item will appear.
    name: onRenderItem
    fullName: onRenderItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderItem?: (props: IPickerItemProps<T>) => JSX.Element;'
      return:
        type:
          - '(props: IPickerItemProps<T>) => JSX.Element'
  - uid: office-ui-fabric-react.IBasePickerProps.onRenderSuggestionsItem
    summary: Function that specifies how an individual suggestion item will appear.
    name: onRenderSuggestionsItem
    fullName: onRenderSuggestionsItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderSuggestionsItem?: (props: T, itemProps: any) => JSX.Element;'
      return:
        type:
          - '(props: T, itemProps: any) => JSX.Element'
  - uid: office-ui-fabric-react.IBasePickerProps.onResolveSuggestions
    summary: >-
      A callback for what should happen when a person types text into the input. Returns the already selected items so
      the resolver can filter them out. If used in conjunction with resolveDelay this will ony kick off after the delay
      throttle.
    name: onResolveSuggestions
    fullName: onResolveSuggestions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onResolveSuggestions: (filter: string, selectedItems?: T[]) => T[] | PromiseLike<T[]>;'
      return:
        type:
          - '(filter: string, selectedItems?: T[]) => T[] | PromiseLike<T[]>'
  - uid: office-ui-fabric-react.IBasePickerProps.onValidateInput
    summary: A function used to validate if raw text entered into the well can be added into the selected items list
    name: onValidateInput
    fullName: onValidateInput
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onValidateInput?: (input: string) => ValidationState;'
      return:
        type:
          - '(input: string) => ValidationState'
  - uid: office-ui-fabric-react.IBasePickerProps.pickerCalloutProps
    summary: The properties that will get passed to the Callout component.
    name: pickerCalloutProps
    fullName: pickerCalloutProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pickerCalloutProps?: ICalloutProps;'
      return:
        type:
          - office-ui-fabric-react.ICalloutProps
  - uid: office-ui-fabric-react.IBasePickerProps.pickerSuggestionsProps
    summary: The properties that will get passed to the Suggestions component.
    name: pickerSuggestionsProps
    fullName: pickerSuggestionsProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pickerSuggestionsProps?: IBasePickerSuggestionsProps;'
      return:
        type:
          - office-ui-fabric-react.IBasePickerSuggestionsProps
  - uid: office-ui-fabric-react.IBasePickerProps.removeButtonAriaLabel
    summary: Aria label for the "X" button in the selected item component.
    name: removeButtonAriaLabel
    fullName: removeButtonAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeButtonAriaLabel?: string;'
      return:
        type:
          - string
  - uid: office-ui-fabric-react.IBasePickerProps.resolveDelay
    summary: >-
      The delay time in ms before resolving suggestions, which is kicked off when input has been changed. e.g. If a
      second input change happens within the resolveDelay time, the timer will start over. Only until after the timer
      completes will onResolveSuggestions be called.
    name: resolveDelay
    fullName: resolveDelay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'resolveDelay?: number;'
      return:
        type:
          - number
  - uid: office-ui-fabric-react.IBasePickerProps.searchingText
    summary: The text to display while searching for more results in a limited suggestions list
    name: searchingText
    fullName: searchingText
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        searchingText?: ((props: {
                input: string;
            }) => string) | string;
      return:
        type:
          - |-
            ((props: {
                    input: string;
                }) => string) | string
  - uid: office-ui-fabric-react.IBasePickerProps.selectedItems
    summary: >-
      The items that the base picker should currently display as selected. If this is provided then the picker will act
      as a controlled component.
    name: selectedItems
    fullName: selectedItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedItems?: T[];'
      return:
        type:
          - 'T[]'
  - uid: office-ui-fabric-react.IBasePickerProps.styles
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IBasePickerStyleProps, IBasePickerStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IBasePickerStyleProps, IBasePickerStyles>'
  - uid: office-ui-fabric-react.IBasePickerProps.theme
    summary: Theme provided by styled() function.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - styling.ITheme
