### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.BasePicker
    name: BasePicker
    fullName: BasePicker
    langs:
      - typeScript
    type: class
    extends:
      - 'BaseComponent<P, IBasePickerState> '
    implements:
      - 'IBasePicker<T> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.BasePicker._ariaMap
      - office-ui-fabric-react.BasePicker._isFocusZoneInnerKeystroke
      - office-ui-fabric-react.BasePicker.(constructor)
      - office-ui-fabric-react.BasePicker.addItem
      - office-ui-fabric-react.BasePicker.addItemByIndex
      - office-ui-fabric-react.BasePicker.canAddItems
      - office-ui-fabric-react.BasePicker.completeSuggestion
      - office-ui-fabric-react.BasePicker.componentDidMount
      - office-ui-fabric-react.BasePicker.componentWillReceiveProps
      - office-ui-fabric-react.BasePicker.componentWillUnmount
      - office-ui-fabric-react.BasePicker.componentWillUpdate
      - office-ui-fabric-react.BasePicker.currentPromise
      - office-ui-fabric-react.BasePicker.dismissSuggestions
      - office-ui-fabric-react.BasePicker.focus
      - office-ui-fabric-react.BasePicker.focusInput
      - office-ui-fabric-react.BasePicker.focusZone
      - office-ui-fabric-react.BasePicker.getActiveDescendant
      - office-ui-fabric-react.BasePicker.getSuggestionsAlert
      - office-ui-fabric-react.BasePicker.input
      - office-ui-fabric-react.BasePicker.items
      - office-ui-fabric-react.BasePicker.onBackspace
      - office-ui-fabric-react.BasePicker.onBlur
      - office-ui-fabric-react.BasePicker.onChange
      - office-ui-fabric-react.BasePicker.onEmptyInputFocus
      - office-ui-fabric-react.BasePicker.onGetMoreResults
      - office-ui-fabric-react.BasePicker.onInputBlur
      - office-ui-fabric-react.BasePicker.onInputChange
      - office-ui-fabric-react.BasePicker.onInputFocus
      - office-ui-fabric-react.BasePicker.onItemChange
      - office-ui-fabric-react.BasePicker.onKeyDown
      - office-ui-fabric-react.BasePicker.onSelectionChange
      - office-ui-fabric-react.BasePicker.onSuggestionClick
      - office-ui-fabric-react.BasePicker.onSuggestionRemove
      - office-ui-fabric-react.BasePicker.onSuggestionSelect
      - office-ui-fabric-react.BasePicker.refocusSuggestions
      - office-ui-fabric-react.BasePicker.removeItem
      - office-ui-fabric-react.BasePicker.removeItems
      - office-ui-fabric-react.BasePicker.render
      - office-ui-fabric-react.BasePicker.renderItems
      - office-ui-fabric-react.BasePicker.renderSuggestions
      - office-ui-fabric-react.BasePicker.resetFocus
      - office-ui-fabric-react.BasePicker.resolveNewValue
      - office-ui-fabric-react.BasePicker.root
      - office-ui-fabric-react.BasePicker.selection
      - office-ui-fabric-react.BasePicker.suggestionElement
      - office-ui-fabric-react.BasePicker.SuggestionOfProperType
      - office-ui-fabric-react.BasePicker.suggestionStore
      - office-ui-fabric-react.BasePicker.updateSuggestions
      - office-ui-fabric-react.BasePicker.updateSuggestionsList
      - office-ui-fabric-react.BasePicker.updateValue
  - uid: office-ui-fabric-react.BasePicker._ariaMap
    name: _ariaMap
    fullName: _ariaMap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _ariaMap: IPickerAriaIds;'
      return:
        type:
          - IPickerAriaIds
  - uid: office-ui-fabric-react.BasePicker._isFocusZoneInnerKeystroke
    name: _isFocusZoneInnerKeystroke
    fullName: _isFocusZoneInnerKeystroke
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _isFocusZoneInnerKeystroke: (ev: React.KeyboardEvent<HTMLElement>) => boolean;'
      return:
        type:
          - '(ev: React.KeyboardEvent<HTMLElement>) => boolean'
  - uid: office-ui-fabric-react.BasePicker.(constructor)
    summary: Constructs a new instance of the `BasePicker` class
    name: (constructor)(basePickerProps)
    fullName: (constructor)(basePickerProps)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(basePickerProps: P);'
      parameters:
        - id: basePickerProps
          description: ''
          type:
            - P
  - uid: office-ui-fabric-react.BasePicker.addItem
    name: addItem
    fullName: addItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected addItem: (item: T) => void;'
      return:
        type:
          - '(item: T) => void'
  - uid: office-ui-fabric-react.BasePicker.addItemByIndex
    name: addItemByIndex
    fullName: addItemByIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected addItemByIndex: (index: number) => void;'
      return:
        type:
          - '(index: number) => void'
  - uid: office-ui-fabric-react.BasePicker.canAddItems
    name: canAddItems()
    fullName: canAddItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected canAddItems(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: office-ui-fabric-react.BasePicker.completeSuggestion
    name: completeSuggestion()
    fullName: completeSuggestion()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completeSuggestion(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.componentDidMount
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.componentWillReceiveProps
    name: componentWillReceiveProps(newProps)
    fullName: componentWillReceiveProps(newProps)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillReceiveProps(newProps: P): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newProps
          description: ''
          type:
            - P
  - uid: office-ui-fabric-react.BasePicker.componentWillUnmount
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.componentWillUpdate
    name: 'componentWillUpdate(newProps, newState)'
    fullName: 'componentWillUpdate(newProps, newState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUpdate(newProps: P, newState: IBasePickerState): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newProps
          description: ''
          type:
            - P
        - id: newState
          description: ''
          type:
            - office-ui-fabric-react.IBasePickerState
  - uid: office-ui-fabric-react.BasePicker.currentPromise
    name: currentPromise
    fullName: currentPromise
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected currentPromise: PromiseLike<any> | undefined;'
      return:
        type:
          - PromiseLike<any> | undefined
  - uid: office-ui-fabric-react.BasePicker.dismissSuggestions
    name: dismissSuggestions
    fullName: dismissSuggestions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dismissSuggestions: (ev?: any) => void;'
      return:
        type:
          - '(ev?: any) => void'
  - uid: office-ui-fabric-react.BasePicker.focus
    name: focus()
    fullName: focus()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.focusInput
    name: focusInput()
    fullName: focusInput()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focusInput(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.focusZone
    name: focusZone
    fullName: focusZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected focusZone: React.RefObject<IFocusZone>;'
      return:
        type:
          - React.RefObject<IFocusZone>
  - uid: office-ui-fabric-react.BasePicker.getActiveDescendant
    name: getActiveDescendant()
    fullName: getActiveDescendant()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected getActiveDescendant(): string | undefined;'
      return:
        type:
          - string | undefined
        description: ''
  - uid: office-ui-fabric-react.BasePicker.getSuggestionsAlert
    name: getSuggestionsAlert(suggestionAlertClassName)
    fullName: getSuggestionsAlert(suggestionAlertClassName)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected getSuggestionsAlert(suggestionAlertClassName?: string): JSX.Element | undefined;'
      return:
        type:
          - JSX.Element | undefined
        description: ''
      parameters:
        - id: suggestionAlertClassName
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.BasePicker.input
    name: input
    fullName: input
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected input: React.RefObject<IAutofill>;'
      return:
        type:
          - React.RefObject<IAutofill>
  - uid: office-ui-fabric-react.BasePicker.items
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: T[];'
      return:
        type:
          - 'T[]'
  - uid: office-ui-fabric-react.BasePicker.onBackspace
    name: onBackspace(ev)
    fullName: onBackspace(ev)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onBackspace(ev: React.KeyboardEvent<HTMLElement>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: ev
          description: ''
          type:
            - React.KeyboardEvent<HTMLElement>
  - uid: office-ui-fabric-react.BasePicker.onBlur
    name: onBlur
    fullName: onBlur
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onBlur: (ev: React.FocusEvent<HTMLElement | Autofill>) => void;'
      return:
        type:
          - '(ev: React.FocusEvent<HTMLElement | Autofill>) => void'
  - uid: office-ui-fabric-react.BasePicker.onChange
    name: onChange(items)
    fullName: onChange(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onChange(items?: T[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: items
          description: ''
          type:
            - 'T[]'
  - uid: office-ui-fabric-react.BasePicker.onEmptyInputFocus
    name: onEmptyInputFocus()
    fullName: onEmptyInputFocus()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onEmptyInputFocus(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.onGetMoreResults
    name: onGetMoreResults
    fullName: onGetMoreResults
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onGetMoreResults: () => void;'
      return:
        type:
          - () => void
  - uid: office-ui-fabric-react.BasePicker.onInputBlur
    name: onInputBlur
    fullName: onInputBlur
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onInputBlur: (ev: React.FocusEvent<HTMLInputElement | Autofill>) => void;'
      return:
        type:
          - '(ev: React.FocusEvent<HTMLInputElement | Autofill>) => void'
  - uid: office-ui-fabric-react.BasePicker.onInputChange
    name: onInputChange
    fullName: onInputChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onInputChange: (value: string) => void;'
      return:
        type:
          - '(value: string) => void'
  - uid: office-ui-fabric-react.BasePicker.onInputFocus
    name: onInputFocus
    fullName: onInputFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onInputFocus: (ev: React.FocusEvent<HTMLInputElement | Autofill>) => void;'
      return:
        type:
          - '(ev: React.FocusEvent<HTMLInputElement | Autofill>) => void'
  - uid: office-ui-fabric-react.BasePicker.onItemChange
    name: onItemChange
    fullName: onItemChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onItemChange: (changedItem: T, index: number) => void;'
      return:
        type:
          - '(changedItem: T, index: number) => void'
  - uid: office-ui-fabric-react.BasePicker.onKeyDown
    name: onKeyDown
    fullName: onKeyDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onKeyDown: (ev: React.KeyboardEvent<HTMLElement>) => void;'
      return:
        type:
          - '(ev: React.KeyboardEvent<HTMLElement>) => void'
  - uid: office-ui-fabric-react.BasePicker.onSelectionChange
    name: onSelectionChange()
    fullName: onSelectionChange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onSelectionChange(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.onSuggestionClick
    name: onSuggestionClick
    fullName: onSuggestionClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onSuggestionClick: (ev: React.MouseEvent<HTMLElement>, item: any, index: number) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLElement>, item: any, index: number) => void'
  - uid: office-ui-fabric-react.BasePicker.onSuggestionRemove
    name: onSuggestionRemove
    fullName: onSuggestionRemove
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onSuggestionRemove: (ev: React.MouseEvent<HTMLElement>, item: T, index: number) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLElement>, item: T, index: number) => void'
  - uid: office-ui-fabric-react.BasePicker.onSuggestionSelect
    name: onSuggestionSelect()
    fullName: onSuggestionSelect()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onSuggestionSelect(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.BasePicker.refocusSuggestions
    name: refocusSuggestions
    fullName: refocusSuggestions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'refocusSuggestions: (keyCode: number) => void;'
      return:
        type:
          - '(keyCode: number) => void'
  - uid: office-ui-fabric-react.BasePicker.removeItem
    name: removeItem
    fullName: removeItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected removeItem: (item: IPickerItemProps<T>, focusNextItem?: boolean | undefined) => void;'
      return:
        type:
          - '(item: IPickerItemProps<T>, focusNextItem?: boolean | undefined) => void'
  - uid: office-ui-fabric-react.BasePicker.removeItems
    name: removeItems
    fullName: removeItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected removeItems: (itemsToRemove: any[]) => void;'
      return:
        type:
          - '(itemsToRemove: any[]) => void'
  - uid: office-ui-fabric-react.BasePicker.render
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: office-ui-fabric-react.BasePicker.renderItems
    name: renderItems()
    fullName: renderItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected renderItems(): JSX.Element[];'
      return:
        type:
          - 'JSX.Element[]'
        description: ''
  - uid: office-ui-fabric-react.BasePicker.renderSuggestions
    name: renderSuggestions()
    fullName: renderSuggestions()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected renderSuggestions(): JSX.Element | null;'
      return:
        type:
          - JSX.Element | null
        description: ''
  - uid: office-ui-fabric-react.BasePicker.resetFocus
    name: resetFocus(index)
    fullName: resetFocus(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected resetFocus(index?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: index
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.BasePicker.resolveNewValue
    name: 'resolveNewValue(updatedValue, suggestions)'
    fullName: 'resolveNewValue(updatedValue, suggestions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected resolveNewValue(updatedValue: string, suggestions: T[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: updatedValue
          description: ''
          type:
            - string
        - id: suggestions
          description: ''
          type:
            - 'T[]'
  - uid: office-ui-fabric-react.BasePicker.root
    name: root
    fullName: root
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected root: React.RefObject<HTMLDivElement>;'
      return:
        type:
          - React.RefObject<HTMLDivElement>
  - uid: office-ui-fabric-react.BasePicker.selection
    name: selection
    fullName: selection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected selection: Selection;'
      return:
        type:
          - office-ui-fabric-react.Selection
  - uid: office-ui-fabric-react.BasePicker.suggestionElement
    name: suggestionElement
    fullName: suggestionElement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected suggestionElement: React.RefObject<ISuggestions<T>>;'
      return:
        type:
          - React.RefObject<ISuggestions<T>>
  - uid: office-ui-fabric-react.BasePicker.SuggestionOfProperType
    deprecated:
      content: this is no longer necessary as typescript now supports generic elements
    name: SuggestionOfProperType
    fullName: SuggestionOfProperType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected SuggestionOfProperType: new (props: ISuggestionsProps<T>) => Suggestions<T>;'
      return:
        type:
          - 'new (props: ISuggestionsProps<T>) => Suggestions<T>'
  - uid: office-ui-fabric-react.BasePicker.suggestionStore
    name: suggestionStore
    fullName: suggestionStore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected suggestionStore: SuggestionsController<T>;'
      return:
        type:
          - SuggestionsController<T>
  - uid: office-ui-fabric-react.BasePicker.updateSuggestions
    name: updateSuggestions(suggestions)
    fullName: updateSuggestions(suggestions)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected updateSuggestions(suggestions: any[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: suggestions
          description: ''
          type:
            - 'any[]'
  - uid: office-ui-fabric-react.BasePicker.updateSuggestionsList
    name: 'updateSuggestionsList(suggestions, updatedValue)'
    fullName: 'updateSuggestionsList(suggestions, updatedValue)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>, updatedValue?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: suggestions
          description: ''
          type:
            - 'T[] | PromiseLike<T[]>'
        - id: updatedValue
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.BasePicker.updateValue
    name: updateValue(updatedValue)
    fullName: updateValue(updatedValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected updateValue(updatedValue: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: updatedValue
          description: ''
          type:
            - string
