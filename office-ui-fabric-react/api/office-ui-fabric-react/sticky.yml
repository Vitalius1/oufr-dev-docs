### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.Sticky
    name: Sticky
    fullName: Sticky
    langs:
      - typeScript
    type: class
    extends:
      - 'BaseComponent<IStickyProps, IStickyState> '
    package: office-ui-fabric-react
    children:
      - office-ui-fabric-react.Sticky.(constructor)
      - office-ui-fabric-react.Sticky.addSticky
      - office-ui-fabric-react.Sticky.canStickyBottom
      - office-ui-fabric-react.Sticky.canStickyTop
      - office-ui-fabric-react.Sticky.componentDidMount
      - office-ui-fabric-react.Sticky.componentDidUpdate
      - office-ui-fabric-react.Sticky.componentWillUnmount
      - office-ui-fabric-react.Sticky.context
      - office-ui-fabric-react.Sticky.contextTypes
      - office-ui-fabric-react.Sticky.defaultProps
      - office-ui-fabric-react.Sticky.nonStickyContent
      - office-ui-fabric-react.Sticky.placeholder
      - office-ui-fabric-react.Sticky.render
      - office-ui-fabric-react.Sticky.resetSticky
      - office-ui-fabric-react.Sticky.root
      - office-ui-fabric-react.Sticky.setDistanceFromTop
      - office-ui-fabric-react.Sticky.shouldComponentUpdate
      - office-ui-fabric-react.Sticky.stickyContentBottom
      - office-ui-fabric-react.Sticky.stickyContentTop
      - office-ui-fabric-react.Sticky.syncScroll
  - uid: office-ui-fabric-react.Sticky.(constructor)
    summary: Constructs a new instance of the `Sticky` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: IStickyProps);'
      parameters:
        - id: props
          description: ''
          type:
            - office-ui-fabric-react.IStickyProps
  - uid: office-ui-fabric-react.Sticky.addSticky
    name: addSticky(stickyContent)
    fullName: addSticky(stickyContent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSticky(stickyContent: HTMLDivElement): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: stickyContent
          description: ''
          type:
            - HTMLDivElement
  - uid: office-ui-fabric-react.Sticky.canStickyBottom
    name: canStickyBottom
    fullName: canStickyBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly canStickyBottom: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.Sticky.canStickyTop
    name: canStickyTop
    fullName: canStickyTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly canStickyTop: boolean;'
      return:
        type:
          - boolean
  - uid: office-ui-fabric-react.Sticky.componentDidMount
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.Sticky.componentDidUpdate
    name: 'componentDidUpdate(prevProps, prevState)'
    fullName: 'componentDidUpdate(prevProps, prevState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidUpdate(prevProps: IStickyProps, prevState: IStickyState): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: prevProps
          description: ''
          type:
            - office-ui-fabric-react.IStickyProps
        - id: prevState
          description: ''
          type:
            - office-ui-fabric-react.IStickyState
  - uid: office-ui-fabric-react.Sticky.componentWillUnmount
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.Sticky.context
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: IScrollablePaneContext;'
      return:
        type:
          - office-ui-fabric-react.IScrollablePaneContext
  - uid: office-ui-fabric-react.Sticky.contextTypes
    name: contextTypes
    fullName: contextTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static contextTypes: IStickyContext;'
      return:
        type:
          - office-ui-fabric-react.IStickyContext
  - uid: office-ui-fabric-react.Sticky.defaultProps
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static defaultProps: IStickyProps;'
      return:
        type:
          - office-ui-fabric-react.IStickyProps
  - uid: office-ui-fabric-react.Sticky.nonStickyContent
    name: nonStickyContent
    fullName: nonStickyContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly nonStickyContent: HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: office-ui-fabric-react.Sticky.placeholder
    name: placeholder
    fullName: placeholder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly placeholder: HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: office-ui-fabric-react.Sticky.render
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: office-ui-fabric-react.Sticky.resetSticky
    name: resetSticky()
    fullName: resetSticky()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resetSticky(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.Sticky.root
    name: root
    fullName: root
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly root: HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: office-ui-fabric-react.Sticky.setDistanceFromTop
    name: setDistanceFromTop(container)
    fullName: setDistanceFromTop(container)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDistanceFromTop(container: HTMLDivElement): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: container
          description: ''
          type:
            - HTMLDivElement
  - uid: office-ui-fabric-react.Sticky.shouldComponentUpdate
    name: 'shouldComponentUpdate(nextProps, nextState)'
    fullName: 'shouldComponentUpdate(nextProps, nextState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'shouldComponentUpdate(nextProps: IStickyProps, nextState: IStickyState): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: nextProps
          description: ''
          type:
            - office-ui-fabric-react.IStickyProps
        - id: nextState
          description: ''
          type:
            - office-ui-fabric-react.IStickyState
  - uid: office-ui-fabric-react.Sticky.stickyContentBottom
    name: stickyContentBottom
    fullName: stickyContentBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly stickyContentBottom: HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: office-ui-fabric-react.Sticky.stickyContentTop
    name: stickyContentTop
    fullName: stickyContentTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly stickyContentTop: HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: office-ui-fabric-react.Sticky.syncScroll
    name: syncScroll
    fullName: syncScroll
    langs:
      - typeScript
    type: property
    syntax:
      content: 'syncScroll: (container: HTMLElement) => void;'
      return:
        type:
          - '(container: HTMLElement) => void'
