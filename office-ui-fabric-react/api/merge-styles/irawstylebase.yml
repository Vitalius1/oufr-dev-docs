### YamlMime:UniversalReference
items:
  - uid: merge-styles.IRawStyleBase
    summary: All raw style properties.
    name: IRawStyleBase
    fullName: IRawStyleBase
    langs:
      - typeScript
    type: interface
    extends:
      - merge-styles.IRawFontStyle
    package: merge-styles
    children:
      - merge-styles.IRawStyleBase.alignContent
      - merge-styles.IRawStyleBase.alignItems
      - merge-styles.IRawStyleBase.alignmentAdjust
      - merge-styles.IRawStyleBase.alignmentBaseline
      - merge-styles.IRawStyleBase.alignSelf
      - merge-styles.IRawStyleBase.animation
      - merge-styles.IRawStyleBase.animationDelay
      - merge-styles.IRawStyleBase.animationDirection
      - merge-styles.IRawStyleBase.animationDuration
      - merge-styles.IRawStyleBase.animationFillMode
      - merge-styles.IRawStyleBase.animationIterationCount
      - merge-styles.IRawStyleBase.animationName
      - merge-styles.IRawStyleBase.animationPlayState
      - merge-styles.IRawStyleBase.animationTimingFunction
      - merge-styles.IRawStyleBase.appearance
      - merge-styles.IRawStyleBase.backdropFilter
      - merge-styles.IRawStyleBase.backfaceVisibility
      - merge-styles.IRawStyleBase.background
      - merge-styles.IRawStyleBase.backgroundAttachment
      - merge-styles.IRawStyleBase.backgroundBlendMode
      - merge-styles.IRawStyleBase.backgroundClip
      - merge-styles.IRawStyleBase.backgroundColor
      - merge-styles.IRawStyleBase.backgroundComposite
      - merge-styles.IRawStyleBase.backgroundImage
      - merge-styles.IRawStyleBase.backgroundOrigin
      - merge-styles.IRawStyleBase.backgroundPosition
      - merge-styles.IRawStyleBase.backgroundRepeat
      - merge-styles.IRawStyleBase.backgroundSize
      - merge-styles.IRawStyleBase.border
      - merge-styles.IRawStyleBase.borderBottom
      - merge-styles.IRawStyleBase.borderBottomColor
      - merge-styles.IRawStyleBase.borderBottomLeftRadius
      - merge-styles.IRawStyleBase.borderBottomRightRadius
      - merge-styles.IRawStyleBase.borderBottomStyle
      - merge-styles.IRawStyleBase.borderBottomWidth
      - merge-styles.IRawStyleBase.borderCollapse
      - merge-styles.IRawStyleBase.borderColor
      - merge-styles.IRawStyleBase.borderCornerShape
      - merge-styles.IRawStyleBase.borderImageSource
      - merge-styles.IRawStyleBase.borderImageWidth
      - merge-styles.IRawStyleBase.borderLeft
      - merge-styles.IRawStyleBase.borderLeftColor
      - merge-styles.IRawStyleBase.borderLeftStyle
      - merge-styles.IRawStyleBase.borderLeftWidth
      - merge-styles.IRawStyleBase.borderRadius
      - merge-styles.IRawStyleBase.borderRight
      - merge-styles.IRawStyleBase.borderRightColor
      - merge-styles.IRawStyleBase.borderRightStyle
      - merge-styles.IRawStyleBase.borderRightWidth
      - merge-styles.IRawStyleBase.borderSpacing
      - merge-styles.IRawStyleBase.borderStyle
      - merge-styles.IRawStyleBase.borderTop
      - merge-styles.IRawStyleBase.borderTopColor
      - merge-styles.IRawStyleBase.borderTopLeftRadius
      - merge-styles.IRawStyleBase.borderTopRightRadius
      - merge-styles.IRawStyleBase.borderTopStyle
      - merge-styles.IRawStyleBase.borderTopWidth
      - merge-styles.IRawStyleBase.borderWidth
      - merge-styles.IRawStyleBase.bottom
      - merge-styles.IRawStyleBase.boxDecorationBreak
      - merge-styles.IRawStyleBase.boxShadow
      - merge-styles.IRawStyleBase.boxSizing
      - merge-styles.IRawStyleBase.breakAfter
      - merge-styles.IRawStyleBase.breakBefore
      - merge-styles.IRawStyleBase.breakInside
      - merge-styles.IRawStyleBase.clear
      - merge-styles.IRawStyleBase.clipRule
      - merge-styles.IRawStyleBase.color
      - merge-styles.IRawStyleBase.columnCount
      - merge-styles.IRawStyleBase.columnFill
      - merge-styles.IRawStyleBase.columnGap
      - merge-styles.IRawStyleBase.columnRule
      - merge-styles.IRawStyleBase.columnRuleColor
      - merge-styles.IRawStyleBase.columnRuleWidth
      - merge-styles.IRawStyleBase.columns
      - merge-styles.IRawStyleBase.columnSpan
      - merge-styles.IRawStyleBase.columnWidth
      - merge-styles.IRawStyleBase.content
      - merge-styles.IRawStyleBase.counterIncrement
      - merge-styles.IRawStyleBase.counterReset
      - merge-styles.IRawStyleBase.cue
      - merge-styles.IRawStyleBase.cueAfter
      - merge-styles.IRawStyleBase.cursor
      - merge-styles.IRawStyleBase.direction
      - merge-styles.IRawStyleBase.display
      - merge-styles.IRawStyleBase.fill
      - merge-styles.IRawStyleBase.fillOpacity
      - merge-styles.IRawStyleBase.fillRule
      - merge-styles.IRawStyleBase.filter
      - merge-styles.IRawStyleBase.flex
      - merge-styles.IRawStyleBase.flexBasis
      - merge-styles.IRawStyleBase.flexDirection
      - merge-styles.IRawStyleBase.flexFlow
      - merge-styles.IRawStyleBase.flexGrow
      - merge-styles.IRawStyleBase.flexShrink
      - merge-styles.IRawStyleBase.flexWrap
      - merge-styles.IRawStyleBase.float
      - merge-styles.IRawStyleBase.flowFrom
      - merge-styles.IRawStyleBase.gridArea
      - merge-styles.IRawStyleBase.gridAutoColumns
      - merge-styles.IRawStyleBase.gridAutoFlow
      - merge-styles.IRawStyleBase.gridAutoRows
      - merge-styles.IRawStyleBase.gridColumn
      - merge-styles.IRawStyleBase.gridColumnEnd
      - merge-styles.IRawStyleBase.gridColumnGap
      - merge-styles.IRawStyleBase.gridColumnStart
      - merge-styles.IRawStyleBase.gridGap
      - merge-styles.IRawStyleBase.gridRow
      - merge-styles.IRawStyleBase.gridRowEnd
      - merge-styles.IRawStyleBase.gridRowGap
      - merge-styles.IRawStyleBase.gridRowPosition
      - merge-styles.IRawStyleBase.gridRowStart
      - merge-styles.IRawStyleBase.gridTemplate
      - merge-styles.IRawStyleBase.gridTemplateAreas
      - merge-styles.IRawStyleBase.gridTemplateColumns
      - merge-styles.IRawStyleBase.gridTemplateRows
      - merge-styles.IRawStyleBase.height
      - merge-styles.IRawStyleBase.hyphenateLimitChars
      - merge-styles.IRawStyleBase.hyphenateLimitLines
      - merge-styles.IRawStyleBase.hyphenateLimitZone
      - merge-styles.IRawStyleBase.hyphens
      - merge-styles.IRawStyleBase.justifyContent
      - merge-styles.IRawStyleBase.justifySelf
      - merge-styles.IRawStyleBase.left
      - merge-styles.IRawStyleBase.letterSpacing
      - merge-styles.IRawStyleBase.lineHeight
      - merge-styles.IRawStyleBase.listStyle
      - merge-styles.IRawStyleBase.listStyleImage
      - merge-styles.IRawStyleBase.listStylePosition
      - merge-styles.IRawStyleBase.listStyleType
      - merge-styles.IRawStyleBase.margin
      - merge-styles.IRawStyleBase.marginBottom
      - merge-styles.IRawStyleBase.marginLeft
      - merge-styles.IRawStyleBase.marginRight
      - merge-styles.IRawStyleBase.marginTop
      - merge-styles.IRawStyleBase.marqueeDirection
      - merge-styles.IRawStyleBase.marqueeStyle
      - merge-styles.IRawStyleBase.mask
      - merge-styles.IRawStyleBase.maskBorder
      - merge-styles.IRawStyleBase.maskBorderRepeat
      - merge-styles.IRawStyleBase.maskBorderSlice
      - merge-styles.IRawStyleBase.maskBorderSource
      - merge-styles.IRawStyleBase.maskBorderWidth
      - merge-styles.IRawStyleBase.maskClip
      - merge-styles.IRawStyleBase.maskOrigin
      - merge-styles.IRawStyleBase.maxFontSize
      - merge-styles.IRawStyleBase.maxHeight
      - merge-styles.IRawStyleBase.maxWidth
      - merge-styles.IRawStyleBase.minHeight
      - merge-styles.IRawStyleBase.minWidth
      - merge-styles.IRawStyleBase.mixBlendMode
      - merge-styles.IRawStyleBase.MozOsxFontSmoothing
      - merge-styles.IRawStyleBase.MsHighContrastAdjust
      - merge-styles.IRawStyleBase.objectFit
      - merge-styles.IRawStyleBase.opacity
      - merge-styles.IRawStyleBase.order
      - merge-styles.IRawStyleBase.orphans
      - merge-styles.IRawStyleBase.outline
      - merge-styles.IRawStyleBase.outlineColor
      - merge-styles.IRawStyleBase.outlineOffset
      - merge-styles.IRawStyleBase.overflow
      - merge-styles.IRawStyleBase.overflowStyle
      - merge-styles.IRawStyleBase.overflowWrap
      - merge-styles.IRawStyleBase.overflowX
      - merge-styles.IRawStyleBase.overflowY
      - merge-styles.IRawStyleBase.padding
      - merge-styles.IRawStyleBase.paddingBlockEnd
      - merge-styles.IRawStyleBase.paddingBlockStart
      - merge-styles.IRawStyleBase.paddingBottom
      - merge-styles.IRawStyleBase.paddingInlineEnd
      - merge-styles.IRawStyleBase.paddingInlineStart
      - merge-styles.IRawStyleBase.paddingLeft
      - merge-styles.IRawStyleBase.paddingRight
      - merge-styles.IRawStyleBase.paddingTop
      - merge-styles.IRawStyleBase.pageBreakAfter
      - merge-styles.IRawStyleBase.pageBreakBefore
      - merge-styles.IRawStyleBase.pageBreakInside
      - merge-styles.IRawStyleBase.pause
      - merge-styles.IRawStyleBase.pauseAfter
      - merge-styles.IRawStyleBase.pauseBefore
      - merge-styles.IRawStyleBase.perspective
      - merge-styles.IRawStyleBase.perspectiveOrigin
      - merge-styles.IRawStyleBase.pointerEvents
      - merge-styles.IRawStyleBase.position
      - merge-styles.IRawStyleBase.quotes
      - merge-styles.IRawStyleBase.regionFragment
      - merge-styles.IRawStyleBase.resize
      - merge-styles.IRawStyleBase.restAfter
      - merge-styles.IRawStyleBase.restBefore
      - merge-styles.IRawStyleBase.right
      - merge-styles.IRawStyleBase.shapeImageThreshold
      - merge-styles.IRawStyleBase.shapeInside
      - merge-styles.IRawStyleBase.shapeMargin
      - merge-styles.IRawStyleBase.shapeOutside
      - merge-styles.IRawStyleBase.speak
      - merge-styles.IRawStyleBase.speakAs
      - merge-styles.IRawStyleBase.stroke
      - merge-styles.IRawStyleBase.strokeLinecap
      - merge-styles.IRawStyleBase.strokeOpacity
      - merge-styles.IRawStyleBase.strokeWidth
      - merge-styles.IRawStyleBase.tableLayout
      - merge-styles.IRawStyleBase.tabSize
      - merge-styles.IRawStyleBase.textAlign
      - merge-styles.IRawStyleBase.textAlignLast
      - merge-styles.IRawStyleBase.textDecoration
      - merge-styles.IRawStyleBase.textDecorationColor
      - merge-styles.IRawStyleBase.textDecorationLine
      - merge-styles.IRawStyleBase.textDecorationSkip
      - merge-styles.IRawStyleBase.textDecorationStyle
      - merge-styles.IRawStyleBase.textEmphasis
      - merge-styles.IRawStyleBase.textEmphasisColor
      - merge-styles.IRawStyleBase.textEmphasisStyle
      - merge-styles.IRawStyleBase.textHeight
      - merge-styles.IRawStyleBase.textIndent
      - merge-styles.IRawStyleBase.textOverflow
      - merge-styles.IRawStyleBase.textOverline
      - merge-styles.IRawStyleBase.textOverlineColor
      - merge-styles.IRawStyleBase.textOverlineMode
      - merge-styles.IRawStyleBase.textOverlineStyle
      - merge-styles.IRawStyleBase.textOverlineWidth
      - merge-styles.IRawStyleBase.textRendering
      - merge-styles.IRawStyleBase.textShadow
      - merge-styles.IRawStyleBase.textTransform
      - merge-styles.IRawStyleBase.textUnderlinePosition
      - merge-styles.IRawStyleBase.textUnderlineStyle
      - merge-styles.IRawStyleBase.top
      - merge-styles.IRawStyleBase.touchAction
      - merge-styles.IRawStyleBase.transform
      - merge-styles.IRawStyleBase.transformOrigin
      - merge-styles.IRawStyleBase.transformOriginZ
      - merge-styles.IRawStyleBase.transformStyle
      - merge-styles.IRawStyleBase.transition
      - merge-styles.IRawStyleBase.transitionDelay
      - merge-styles.IRawStyleBase.transitionDuration
      - merge-styles.IRawStyleBase.transitionProperty
      - merge-styles.IRawStyleBase.transitionTimingFunction
      - merge-styles.IRawStyleBase.unicodeBidi
      - merge-styles.IRawStyleBase.userFocus
      - merge-styles.IRawStyleBase.userInput
      - merge-styles.IRawStyleBase.userSelect
      - merge-styles.IRawStyleBase.verticalAlign
      - merge-styles.IRawStyleBase.visibility
      - merge-styles.IRawStyleBase.voiceBalance
      - merge-styles.IRawStyleBase.voiceDuration
      - merge-styles.IRawStyleBase.voiceFamily
      - merge-styles.IRawStyleBase.voicePitch
      - merge-styles.IRawStyleBase.voiceRange
      - merge-styles.IRawStyleBase.voiceRate
      - merge-styles.IRawStyleBase.voiceStress
      - merge-styles.IRawStyleBase.voiceVolume
      - merge-styles.IRawStyleBase.WebkitBackdropFilter
      - merge-styles.IRawStyleBase.WebkitFontSmoothing
      - merge-styles.IRawStyleBase.WebkitOverflowScrolling
      - merge-styles.IRawStyleBase.whiteSpace
      - merge-styles.IRawStyleBase.widows
      - merge-styles.IRawStyleBase.width
      - merge-styles.IRawStyleBase.wordBreak
      - merge-styles.IRawStyleBase.wordSpacing
      - merge-styles.IRawStyleBase.wordWrap
      - merge-styles.IRawStyleBase.wrapFlow
      - merge-styles.IRawStyleBase.wrapMargin
      - merge-styles.IRawStyleBase.writingMode
      - merge-styles.IRawStyleBase.zIndex
      - merge-styles.IRawStyleBase.zoom
  - uid: merge-styles.IRawStyleBase.alignContent
    summary: >-
      Aligns a flex container's lines within the flex container when there is extra space in the cross-axis, similar to
      how justify-content aligns individual items within the main-axis.
    name: alignContent
    fullName: alignContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignContent?: ICSSRule | ''flex-start'' | ''flex-end'' | ''center'' | ''space-between'' | ''space-around'' | ''stretch'';'
      return:
        type:
          - ICSSRule | 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'stretch'
  - uid: merge-styles.IRawStyleBase.alignItems
    summary: >-
      Sets the default alignment in the cross axis for all of the flex container's items, including anonymous flex
      items, similarly to how justify-content aligns items along the main axis.
    name: alignItems
    fullName: alignItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignItems?: ICSSRule | ''flex-start'' | ''flex-end'' | ''center'' | ''baseline'' | ''stretch'';'
      return:
        type:
          - ICSSRule | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch'
  - uid: merge-styles.IRawStyleBase.alignmentAdjust
    summary: >-
      This property allows precise alignment of elements, such as graphics, that do not have a baseline-table or lack
      the desired baseline in their baseline-table. With the alignment-adjust property, the position of the baseline
      identified by the alignment-baseline can be explicitly determined. It also determines precisely the alignment
      point for each glyph within a textual element.
    name: alignmentAdjust
    fullName: alignmentAdjust
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignmentAdjust?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.alignmentBaseline
    summary: >-
      Specifies how an object is aligned with respect to its parent. This property specifies which baseline of this
      element is to be aligned with the corresponding baseline of the parent. For example, this allows alphabetic
      baselines in Roman text to stay aligned across font size changes. It defaults to the baseline with the same name
      as the computed value of the alignment-baseline property.
    name: alignmentBaseline
    fullName: alignmentBaseline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignmentBaseline?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.alignSelf
    summary: >-
      Aligns the box (as the alignment subject) within its containing block (as the alignment container) along the
      block/column/cross axis of the alignment container.


      See CSS align-self property https://www.w3.org/TR/css-align-3/\#propdef-align-self
    name: alignSelf
    fullName: alignSelf
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        alignSelf?: ICSSRule | 'auto' | 'normal' | 'stretch' | ICSSBaselinePositionRule |
        ICSSOverflowAndSelfPositionRule;
      return:
        type:
          - ICSSRule | 'auto' | 'normal' | 'stretch' | ICSSBaselinePositionRule | ICSSOverflowAndSelfPositionRule
  - uid: merge-styles.IRawStyleBase.animation
    summary: >-
      The animation CSS property is a shorthand property for the various animation properties: `animation-name`<!-- -->,
      `animation-duration`<!-- -->, `animation-timing-function`<!-- -->, `animation-delay`<!-- -->,
      `animation-iteration-count`<!-- -->, `animation-direction`<!-- -->, `animation-fill-mode`<!-- -->, and
      `animation-play-state`<!-- -->.
    name: animation
    fullName: animation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animation?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.animationDelay
    summary: >-
      Defines a length of time to elapse before an animation starts, allowing an animation to begin execution some time
      after it is applied.
    name: animationDelay
    fullName: animationDelay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationDelay?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.animationDirection
    summary: Defines whether an animation should run in reverse on some or all cycles.
    name: animationDirection
    fullName: animationDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationDirection?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.animationDuration
    summary: 'Specifies the length an animation takes to finish. Default value is 0, meaning there will be no animation.'
    name: animationDuration
    fullName: animationDuration
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationDuration?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.animationFillMode
    summary: >-
      The animation-fill-mode CSS property specifies how a CSS animation should apply styles to its target before and
      after its execution.
    name: animationFillMode
    fullName: animationFillMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationFillMode?: ICSSRule | ''none'' | ''forwards'' | ''backwards'' | ''both'';'
      return:
        type:
          - ICSSRule | 'none' | 'forwards' | 'backwards' | 'both'
  - uid: merge-styles.IRawStyleBase.animationIterationCount
    summary: Specifies how many times an animation cycle should play.
    name: animationIterationCount
    fullName: animationIterationCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationIterationCount?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.animationName
    summary: Defines the list of animations that apply to the element.
    name: animationName
    fullName: animationName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationName?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.animationPlayState
    summary: Defines whether an animation is running or paused.
    name: animationPlayState
    fullName: animationPlayState
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationPlayState?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.animationTimingFunction
    summary: The animation-timing-function specifies the speed curve of an animation.
    name: animationTimingFunction
    fullName: animationTimingFunction
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationTimingFunction?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.appearance
    summary: Allows changing the style of any element to platform-based interface elements or vice versa.
    name: appearance
    fullName: appearance
    langs:
      - typeScript
    type: property
    syntax:
      content: 'appearance?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backdropFilter
    summary: >-
      Lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it
      applies to everything behind the element, to see the effect you must make the element or its background at least
      partially transparent.
    name: backdropFilter
    fullName: backdropFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backdropFilter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backfaceVisibility
    summary: Determines whether or not the “back” side of a transformed element is visible when facing the viewer.
    name: backfaceVisibility
    fullName: backfaceVisibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backfaceVisibility?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.background
    summary: >-
      Shorthand property to set the values for one or more of: background-clip, background-color, background-image,
      background-origin, background-position, background-repeat, background-size, and background-attachment.
    name: background
    fullName: background
    langs:
      - typeScript
    type: property
    syntax:
      content: 'background?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundAttachment
    summary: >-
      If a background-image is specified, this property determines whether that image's position is fixed within the
      viewport, or scrolls along with its containing block. See CSS 3 background-attachment property
      https://drafts.csswg.org/css-backgrounds-3/\#the-background-attachment
    name: backgroundAttachment
    fullName: backgroundAttachment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundAttachment?: ICSSRule | ''scroll'' | ''fixed'' | ''local'';'
      return:
        type:
          - ICSSRule | 'scroll' | 'fixed' | 'local'
  - uid: merge-styles.IRawStyleBase.backgroundBlendMode
    summary: >-
      This property describes how the element's background images should blend with each other and the element's
      background color. The value is a list of blend modes that corresponds to each background image. Each element in
      the list will apply to the corresponding element of background-image. If a property doesn’t have enough
      comma-separated values to match the number of layers, the UA must calculate its used value by repeating the list
      of values until there are enough.
    name: backgroundBlendMode
    fullName: backgroundBlendMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundBlendMode?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundClip
    summary: >-
      The background-clip CSS property specifies if an element's background, whether a `<color>` or an `<image>`<!--
      -->, extends underneath its border.


      \* Does not work in IE


      \* The `text` value is experimental and should not be used in production code.
    name: backgroundClip
    fullName: backgroundClip
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundClip?: ICSSRule | ''border-box'' | ''padding-box'' | ''content-box'' | ''text'';'
      return:
        type:
          - ICSSRule | 'border-box' | 'padding-box' | 'content-box' | 'text'
  - uid: merge-styles.IRawStyleBase.backgroundColor
    summary: Sets the background color of an element.
    name: backgroundColor
    fullName: backgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundComposite
    summary: Sets a compositing style for background images and colors.
    name: backgroundComposite
    fullName: backgroundComposite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundComposite?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundImage
    summary: >-
      Applies one or more background images to an element. These can be any valid CSS image, including url() paths to
      image files or CSS gradients.
    name: backgroundImage
    fullName: backgroundImage
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundImage?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundOrigin
    summary: Specifies what the background-position property is relative to.
    name: backgroundOrigin
    fullName: backgroundOrigin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundOrigin?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundPosition
    summary: Sets the position of a background image.
    name: backgroundPosition
    fullName: backgroundPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundPosition?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundRepeat
    summary: Background-repeat defines if and how background images will be repeated after they have been sized and positioned
    name: backgroundRepeat
    fullName: backgroundRepeat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundRepeat?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.backgroundSize
    summary: Sets the size of background images
    name: backgroundSize
    fullName: backgroundSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundSize?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.border
    summary: >-
      Shorthand property that defines the different properties of all four sides of an element's border in a single
      declaration. It can be used to set border-width, border-style and border-color, or a subset of these.
    name: border
    fullName: border
    langs:
      - typeScript
    type: property
    syntax:
      content: 'border?: ICSSRule | 0 | string;'
      return:
        type:
          - ICSSRule | 0 | string
  - uid: merge-styles.IRawStyleBase.borderBottom
    summary: 'Shorthand that sets the values of border-bottom-color, border-bottom-style, and border-bottom-width.'
    name: borderBottom
    fullName: borderBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderBottom?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderBottomColor
    summary: Sets the color of the bottom border of an element.
    name: borderBottomColor
    fullName: borderBottomColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderBottomColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderBottomLeftRadius
    summary: Defines the shape of the border of the bottom-left corner.
    name: borderBottomLeftRadius
    fullName: borderBottomLeftRadius
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderBottomLeftRadius?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderBottomRightRadius
    summary: Defines the shape of the border of the bottom-right corner.
    name: borderBottomRightRadius
    fullName: borderBottomRightRadius
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderBottomRightRadius?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderBottomStyle
    summary: Sets the line style of the bottom border of a box.
    name: borderBottomStyle
    fullName: borderBottomStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderBottomStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderBottomWidth
    summary: >-
      Sets the width of an element's bottom border. To set all four borders, use the border-width shorthand property
      which sets the values simultaneously for border-top-width, border-right-width, border-bottom-width, and
      border-left-width.
    name: borderBottomWidth
    fullName: borderBottomWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderBottomWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderCollapse
    summary: Border-collapse can be used for collapsing the borders between table cells
    name: borderCollapse
    fullName: borderCollapse
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderCollapse?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderColor
    summary: >-
      The CSS border-color property sets the color of an element's four borders. This property can have from one to four
      values, made up of the elementary properties: • border-top-color • border-right-color • border-bottom-color •
      border-left-color The default color is the currentColor of each of these values. If you provide one value, it sets
      the color for the element. Two values set the horizontal and vertical values, respectively. Providing three values
      sets the top, vertical, and bottom values, in that order. Four values set all for sides: top, right, bottom, and
      left, in that order.
    name: borderColor
    fullName: borderColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderCornerShape
    summary: >-
      Specifies different corner clipping effects, such as scoop (inner curves), bevel (straight cuts) or notch (cut-off
      rectangles). Works along with border-radius to specify the size of each corner effect.
    name: borderCornerShape
    fullName: borderCornerShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderCornerShape?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderImageSource
    summary: >-
      The property border-image-source is used to set the image to be used instead of the border style. If this is set
      to none the border-style is used instead.
    name: borderImageSource
    fullName: borderImageSource
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderImageSource?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderImageWidth
    summary: >-
      The border-image-width CSS property defines the offset to use for dividing the border image in nine parts, the
      top-left corner, central top edge, top-right-corner, central right edge, bottom-right corner, central bottom edge,
      bottom-left corner, and central right edge. They represent inward distance from the top, right, bottom, and left
      edges.
    name: borderImageWidth
    fullName: borderImageWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderImageWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderLeft
    summary: >-
      Shorthand property that defines the border-width, border-style and border-color of an element's left border in a
      single declaration. Note that you can use the corresponding longhand properties to set specific individual
      properties of the left border — border-left-width, border-left-style and border-left-color.
    name: borderLeft
    fullName: borderLeft
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderLeft?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderLeftColor
    summary: >-
      The CSS border-left-color property sets the color of an element's left border. This page explains the
      border-left-color value, but often you will find it more convenient to fix the border's left color as part of a
      shorthand set, either border-left or border-color. Colors can be defined several ways. For more information, see
      Usage.
    name: borderLeftColor
    fullName: borderLeftColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderLeftColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderLeftStyle
    summary: >-
      Sets the style of an element's left border. To set all four borders, use the shorthand property, border-style.
      Otherwise, you can set the borders individually with border-top-style, border-right-style, border-bottom-style,
      border-left-style.
    name: borderLeftStyle
    fullName: borderLeftStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderLeftStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderLeftWidth
    summary: >-
      Sets the width of an element's left border. To set all four borders, use the border-width shorthand property which
      sets the values simultaneously for border-top-width, border-right-width, border-bottom-width, and
      border-left-width.
    name: borderLeftWidth
    fullName: borderLeftWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderLeftWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderRadius
    summary: Defines how round the border's corners are.
    name: borderRadius
    fullName: borderRadius
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderRadius?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderRight
    summary: >-
      Shorthand property that defines the border-width, border-style and border-color of an element's right border in a
      single declaration. Note that you can use the corresponding longhand properties to set specific individual
      properties of the right border — border-right-width, border-right-style and border-right-color.
    name: borderRight
    fullName: borderRight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderRight?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderRightColor
    summary: >-
      Sets the color of an element's right border. This page explains the border-right-color value, but often you will
      find it more convenient to fix the border's right color as part of a shorthand set, either border-right or
      border-color. Colors can be defined several ways. For more information, see Usage.
    name: borderRightColor
    fullName: borderRightColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderRightColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderRightStyle
    summary: >-
      Sets the style of an element's right border. To set all four borders, use the shorthand property, border-style.
      Otherwise, you can set the borders individually with border-top-style, border-right-style, border-bottom-style,
      border-left-style.
    name: borderRightStyle
    fullName: borderRightStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderRightStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderRightWidth
    summary: >-
      Sets the width of an element's right border. To set all four borders, use the border-width shorthand property
      which sets the values simultaneously for border-top-width, border-right-width, border-bottom-width, and
      border-left-width.
    name: borderRightWidth
    fullName: borderRightWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderRightWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderSpacing
    summary: Specifies the distance between the borders of adjacent cells.
    name: borderSpacing
    fullName: borderSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderSpacing?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderStyle
    summary: >-
      Sets the style of an element's four borders. This property can have from one to four values. With only one value,
      the value will be applied to all four borders; otherwise, this works as a shorthand property for each of
      border-top-style, border-right-style, border-bottom-style, border-left-style, where each border style may be
      assigned a separate value.
    name: borderStyle
    fullName: borderStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderTop
    summary: >-
      Shorthand property that defines the border-width, border-style and border-color of an element's top border in a
      single declaration. Note that you can use the corresponding longhand properties to set specific individual
      properties of the top border — border-top-width, border-top-style and border-top-color.
    name: borderTop
    fullName: borderTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderTop?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderTopColor
    summary: >-
      Sets the color of an element's top border. This page explains the border-top-color value, but often you will find
      it more convenient to fix the border's top color as part of a shorthand set, either border-top or border-color.
      Colors can be defined several ways. For more information, see Usage.
    name: borderTopColor
    fullName: borderTopColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderTopColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderTopLeftRadius
    summary: Sets the rounding of the top-left corner of the element.
    name: borderTopLeftRadius
    fullName: borderTopLeftRadius
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderTopLeftRadius?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderTopRightRadius
    summary: Sets the rounding of the top-right corner of the element.
    name: borderTopRightRadius
    fullName: borderTopRightRadius
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderTopRightRadius?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderTopStyle
    summary: >-
      Sets the style of an element's top border. To set all four borders, use the shorthand property, border-style.
      Otherwise, you can set the borders individually with border-top-style, border-right-style, border-bottom-style,
      border-left-style.
    name: borderTopStyle
    fullName: borderTopStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderTopStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.borderTopWidth
    summary: >-
      Sets the width of an element's top border. To set all four borders, use the border-width shorthand property which
      sets the values simultaneously for border-top-width, border-right-width, border-bottom-width, and
      border-left-width.
    name: borderTopWidth
    fullName: borderTopWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderTopWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.borderWidth
    summary: >-
      Sets the width of an element's four borders. This property can have from one to four values. This is a shorthand
      property for setting values simultaneously for border-top-width, border-right-width, border-bottom-width, and
      border-left-width.
    name: borderWidth
    fullName: borderWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.bottom
    summary: >-
      This property specifies how far an absolutely positioned box's bottom margin edge is offset above the bottom edge
      of the box's containing block. For relatively positioned boxes, the offset is with respect to the bottom edges of
      the box itself (i.e., the box is given a position in the normal flow, then offset from that position according to
      these properties).
    name: bottom
    fullName: bottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bottom?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.boxDecorationBreak
    summary: >-
      Breaks a box into fragments creating new borders, padding and repeating backgrounds or lets it stay as a
      continuous box on a page break, column break, or, for inline elements, at a line break.
    name: boxDecorationBreak
    fullName: boxDecorationBreak
    langs:
      - typeScript
    type: property
    syntax:
      content: 'boxDecorationBreak?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.boxShadow
    summary: >-
      Cast a drop shadow from the frame of almost any element. MDN:
      https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow
    name: boxShadow
    fullName: boxShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'boxShadow?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.boxSizing
    summary: >-
      The CSS box-sizing property is used to alter the default CSS box model used to calculate width and height of the
      elements.
    name: boxSizing
    fullName: boxSizing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'boxSizing?: ICSSRule | ''border-box'' | ''content-box'';'
      return:
        type:
          - ICSSRule | 'border-box' | 'content-box'
  - uid: merge-styles.IRawStyleBase.breakAfter
    summary: >-
      The CSS break-after property allows you to force a break on multi-column layouts. More specifically, it allows you
      to force a break after an element. It allows you to determine if a break should occur, and what type of break it
      should be. The break-after CSS property describes how the page, column or region break behaves after the generated
      box. If there is no generated box, the property is ignored.
    name: breakAfter
    fullName: breakAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'breakAfter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.breakBefore
    summary: Control page/column/region breaks that fall above a block of content
    name: breakBefore
    fullName: breakBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'breakBefore?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.breakInside
    summary: Control page/column/region breaks that fall within a block of content
    name: breakInside
    fullName: breakInside
    langs:
      - typeScript
    type: property
    syntax:
      content: 'breakInside?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.clear
    summary: >-
      The clear CSS property specifies if an element can be positioned next to or must be positioned below the floating
      elements that precede it in the markup.
    name: clear
    fullName: clear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'clear?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.clipRule
    summary: >-
      Clipping crops an graphic, so that only a portion of the graphic is rendered, or filled. This clip-rule property,
      when used with the clip-path property, defines which clip rule, or algorithm, to use when filling the different
      parts of a graphics.
    name: clipRule
    fullName: clipRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'clipRule?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.color
    summary: >-
      The color property sets the color of an element's foreground content (usually text), accepting any standard CSS
      color from keywords and hex values to RGB(a) and HSL(a).
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.columnCount
    summary: >-
      Describes the number of columns of the element. See CSS 3 column-count property
      https://www.w3.org/TR/css3-multicol/\#cc
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnCount?: ICSSRule | number | ''auto'';'
      return:
        type:
          - ICSSRule | number | 'auto'
  - uid: merge-styles.IRawStyleBase.columnFill
    summary: Specifies how to fill columns (balanced or sequential).
    name: columnFill
    fullName: columnFill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnFill?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.columnGap
    summary: The column-gap property controls the width of the gap between columns in multi-column elements.
    name: columnGap
    fullName: columnGap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnGap?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.columnRule
    summary: 'Sets the width, style, and color of the rule between columns.'
    name: columnRule
    fullName: columnRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnRule?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.columnRuleColor
    summary: Specifies the color of the rule between columns.
    name: columnRuleColor
    fullName: columnRuleColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnRuleColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.columnRuleWidth
    summary: Specifies the width of the rule between columns.
    name: columnRuleWidth
    fullName: columnRuleWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnRuleWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.columns
    summary: This property is a shorthand property for setting column-width and/or column-count.
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columns?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.columnSpan
    summary: >-
      The column-span CSS property makes it possible for an element to span across all columns when its value is set to
      all. An element that spans more than one column is called a spanning element.
    name: columnSpan
    fullName: columnSpan
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnSpan?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.columnWidth
    summary: Specifies the width of columns in multi-column elements.
    name: columnWidth
    fullName: columnWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.content
    summary: Content for pseudo selectors.
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content?: string;'
      return:
        type:
          - string
  - uid: merge-styles.IRawStyleBase.counterIncrement
    summary: >-
      The counter-increment property accepts one or more names of counters (identifiers), each one optionally followed
      by an integer which specifies the value by which the counter should be incremented (e.g. if the value is 2, the
      counter increases by 2 each time it is invoked).
    name: counterIncrement
    fullName: counterIncrement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'counterIncrement?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.counterReset
    summary: >-
      The counter-reset property contains a list of one or more names of counters, each one optionally followed by an
      integer (otherwise, the integer defaults to 0.) Each time the given element is invoked, the counters specified by
      the property are set to the given integer.
    name: counterReset
    fullName: counterReset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'counterReset?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.cue
    summary: >-
      The cue property specifies sound files (known as an "auditory icon") to be played by speech media agents before
      and after presenting an element's content; if only one file is specified, it is played both before and after. The
      volume at which the file(s) should be played, relative to the volume of the main element, may also be specified.
      The icon files may also be set separately with the cue-before and cue-after properties.
    name: cue
    fullName: cue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cue?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.cueAfter
    summary: >-
      The cue-after property specifies a sound file (known as an "auditory icon") to be played by speech media agents
      after presenting an element's content; the volume at which the file should be played may also be specified. The
      shorthand property cue sets cue sounds for both before and after the element is presented.
    name: cueAfter
    fullName: cueAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cueAfter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.cursor
    summary: Specifies the mouse cursor displayed when the mouse pointer is over an element.
    name: cursor
    fullName: cursor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cursor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.direction
    summary: >-
      The direction CSS property specifies the text direction/writing direction. The rtl is used for Hebrew or Arabic
      text, the ltr is for other languages.
    name: direction
    fullName: direction
    langs:
      - typeScript
    type: property
    syntax:
      content: 'direction?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.display
    summary: >-
      This property specifies the type of rendering box used for an element. It is a shorthand property for many other
      display properties. W3: https://www.w3.org/TR/css-display-3/\#the-display-properties MDN:
      https://developer.mozilla.org/en-US/docs/Web/CSS/display
    name: display
    fullName: display
    langs:
      - typeScript
    type: property
    syntax:
      content: 'display?: ICSSRule | ICSSDisplayRule;'
      return:
        type:
          - ICSSRule | ICSSDisplayRule
  - uid: merge-styles.IRawStyleBase.fill
    summary: >-
      The ‘fill’ property paints the interior of the given graphical element. The area to be painted consists of any
      areas inside the outline of the shape. To determine the inside of the shape, all subpaths are considered, and the
      interior is determined according to the rules associated with the current value of the ‘fill-rule’ property. The
      zero-width geometric outline of a shape is included in the area to be painted.
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fill?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.fillOpacity
    summary: >-
      SVG: Specifies the opacity of the color or the content the current object is filled with. See SVG 1.1
      https://www.w3.org/TR/SVG/painting.html\#FillOpacityProperty
    name: fillOpacity
    fullName: fillOpacity
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fillOpacity?: ICSSRule | number;'
      return:
        type:
          - ICSSRule | number
  - uid: merge-styles.IRawStyleBase.fillRule
    summary: >-
      The ‘fill-rule’ property indicates the algorithm which is to be used to determine what parts of the canvas are
      included inside the shape. For a simple, non-intersecting path, it is intuitively clear what region lies "inside";
      however, for a more complex path, such as a path that intersects itself or where one subpath encloses another, the
      interpretation of "inside" is not so obvious. The ‘fill-rule’ property provides two options for how the inside of
      a shape is determined:
    name: fillRule
    fullName: fillRule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fillRule?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.filter
    summary: >-
      Applies various image processing effects. This property is largely unsupported. See Compatibility section for more
      information.
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.flex
    summary: 'Shorthand for `flex-grow`<!-- -->, `flex-shrink`<!-- -->, and `flex-basis`<!-- -->.'
    name: flex
    fullName: flex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flex?: ICSSRule | string | number;'
      return:
        type:
          - ICSSRule | string | number
  - uid: merge-styles.IRawStyleBase.flexBasis
    summary: >-
      The flex-basis CSS property describes the initial main size of the flex item before any free space is distributed
      according to the flex factors described in the flex property (flex-grow and flex-shrink).
    name: flexBasis
    fullName: flexBasis
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flexBasis?: ICSSRule | string | number;'
      return:
        type:
          - ICSSRule | string | number
  - uid: merge-styles.IRawStyleBase.flexDirection
    summary: >-
      The flex-direction CSS property describes how flex items are placed in the flex container, by setting the
      direction of the flex container's main axis.
    name: flexDirection
    fullName: flexDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flexDirection?: ICSSRule | ''row'' | ''row-reverse'' | ''column'' | ''column-reverse'';'
      return:
        type:
          - ICSSRule | 'row' | 'row-reverse' | 'column' | 'column-reverse'
  - uid: merge-styles.IRawStyleBase.flexFlow
    summary: >-
      The flex-flow CSS property defines the flex container's main and cross axis. It is a shorthand property for the
      flex-direction and flex-wrap properties.
    name: flexFlow
    fullName: flexFlow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flexFlow?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.flexGrow
    summary: >-
      Specifies the flex grow factor of a flex item. See CSS flex-grow property
      https://drafts.csswg.org/css-flexbox-1/\#flex-grow-property
    name: flexGrow
    fullName: flexGrow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flexGrow?: ICSSRule | number | string;'
      return:
        type:
          - ICSSRule | number | string
  - uid: merge-styles.IRawStyleBase.flexShrink
    summary: >-
      Specifies the flex shrink factor of a flex item. See CSS flex-shrink property
      https://drafts.csswg.org/css-flexbox-1/\#flex-shrink-property
    name: flexShrink
    fullName: flexShrink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flexShrink?: ICSSRule | number | string;'
      return:
        type:
          - ICSSRule | number | string
  - uid: merge-styles.IRawStyleBase.flexWrap
    summary: >-
      Specifies whether flex items are forced into a single line or can be wrapped onto multiple lines. If wrapping is
      allowed, this property also enables you to control the direction in which lines are stacked. See CSS flex-wrap
      property https://drafts.csswg.org/css-flexbox-1/\#flex-wrap-property
    name: flexWrap
    fullName: flexWrap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flexWrap?: ICSSRule | ''nowrap'' | ''wrap'' | ''wrap-reverse'';'
      return:
        type:
          - ICSSRule | 'nowrap' | 'wrap' | 'wrap-reverse'
  - uid: merge-styles.IRawStyleBase.float
    summary: >-
      Elements which have the style float are floated horizontally. These elements can move as far to the left or right
      of the containing element. All elements after the floating element will flow around it, but elements before the
      floating element are not impacted. If several floating elements are placed after each other, they will float next
      to each other as long as there is room.
    name: float
    fullName: float
    langs:
      - typeScript
    type: property
    syntax:
      content: 'float?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.flowFrom
    summary: >-
      Flows content from a named flow (specified by a corresponding flow-into) through selected elements to form a
      dynamic chain of layout regions.
    name: flowFrom
    fullName: flowFrom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flowFrom?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridArea
    summary: >-
      Lays out one or more grid items bound by 4 grid lines. Shorthand for setting grid-column-start, grid-column-end,
      grid-row-start, and grid-row-end in a single declaration.
    name: gridArea
    fullName: gridArea
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridArea?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridAutoColumns
    summary: Specifies the size of an implicitly-created grid column track
    name: gridAutoColumns
    fullName: gridAutoColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridAutoColumns?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridAutoFlow
    summary: >-
      Controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the
      grid.
    name: gridAutoFlow
    fullName: gridAutoFlow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridAutoFlow?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridAutoRows
    summary: Specifies the size of an implicitly-created grid column track
    name: gridAutoRows
    fullName: gridAutoRows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridAutoRows?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridColumn
    summary: >-
      Controls a grid item's placement in a grid area, particularly grid position and a grid span. Shorthand for setting
      grid-column-start and grid-column-end in a single declaration.
    name: gridColumn
    fullName: gridColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridColumn?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridColumnEnd
    summary: >-
      Controls a grid item's placement in a grid area as well as grid position and a grid span. The grid-column-end
      property (with grid-row-start, grid-row-end, and grid-column-start) determines a grid item's placement by
      specifying the grid lines of a grid item's grid area.
    name: gridColumnEnd
    fullName: gridColumnEnd
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridColumnEnd?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridColumnGap
    summary: Sets the size of the gap (gutter) between an element's columns
    name: gridColumnGap
    fullName: gridColumnGap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridColumnGap?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridColumnStart
    summary: >-
      Determines a grid item's placement by specifying the starting grid lines of a grid item's grid area . A grid
      item's placement in a grid area consists of a grid position and a grid span. See also ( grid-row-start,
      grid-row-end, and grid-column-end)
    name: gridColumnStart
    fullName: gridColumnStart
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridColumnStart?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridGap
    summary: >-
      Specifies the gaps (gutters) between grid rows and columns. It is a shorthand for grid-row-gap and
      grid-column-gap.
    name: gridGap
    fullName: gridGap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridGap?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridRow
    summary: >-
      Gets or sets a value that indicates which row an element within a Grid should appear in. Shorthand for setting
      grid-row-start and grid-row-end in a single declaration.
    name: gridRow
    fullName: gridRow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridRow?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridRowEnd
    summary: >-
      Determines a grid item’s placement by specifying the block-end. A grid item's placement in a grid area consists of
      a grid position and a grid span. The grid-row-end property (with grid-row-start, grid-column-start, and
      grid-column-end) determines a grid item's placement by specifying the grid lines of a grid item's grid area.
    name: gridRowEnd
    fullName: gridRowEnd
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridRowEnd?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridRowGap
    summary: Sets the size of the gap (gutter) between an element's grid rows
    name: gridRowGap
    fullName: gridRowGap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridRowGap?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridRowPosition
    summary: >-
      Specifies a row position based upon an integer location, string value, or desired row size.
      css/properties/grid-row is used as short-hand for grid-row-position and grid-row-position
    name: gridRowPosition
    fullName: gridRowPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridRowPosition?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridRowStart
    summary: >-
      Specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic)
      to its grid placement, thereby specifying the inline-start edge of its grid area
    name: gridRowStart
    fullName: gridRowStart
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridRowStart?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridTemplate
    summary: >-
      Specifies named grid areas which are not associated with any particular grid item, but can be referenced from the
      grid-placement properties. The syntax of the grid-template-areas property also provides a visualization of the
      structure of the grid, making the overall layout of the grid container easier to understand.
    name: gridTemplate
    fullName: gridTemplate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridTemplate?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridTemplateAreas
    summary: Specifies named grid areas
    name: gridTemplateAreas
    fullName: gridTemplateAreas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridTemplateAreas?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridTemplateColumns
    summary: >-
      Specifies (with grid-template-rows) the line names and track sizing functions of the grid. Each sizing function
      can be specified as a length, a percentage of the grid container’s size, a measurement of the contents occupying
      the column or row, or a fraction of the free space in the grid.
    name: gridTemplateColumns
    fullName: gridTemplateColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridTemplateColumns?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.gridTemplateRows
    summary: >-
      Specifies (with grid-template-columns) the line names and track sizing functions of the grid. Each sizing function
      can be specified as a length, a percentage of the grid container’s size, a measurement of the contents occupying
      the column or row, or a fraction of the free space in the grid.
    name: gridTemplateRows
    fullName: gridTemplateRows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gridTemplateRows?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.height
    summary: >-
      Sets the height of an element. The content area of the element height does not include the padding, border, and
      margin of the element.
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.hyphenateLimitChars
    summary: Specifies the minimum number of characters in a hyphenated word
    name: hyphenateLimitChars
    fullName: hyphenateLimitChars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyphenateLimitChars?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.hyphenateLimitLines
    summary: >-
      Indicates the maximum number of successive hyphenated lines in an element. The ‘no-limit’ value means that there
      is no limit.
    name: hyphenateLimitLines
    fullName: hyphenateLimitLines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyphenateLimitLines?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.hyphenateLimitZone
    summary: >-
      Specifies the maximum amount of trailing whitespace (before justification) that may be left in a line before
      hyphenation is triggered to pull part of a word from the next line back up into the current one.
    name: hyphenateLimitZone
    fullName: hyphenateLimitZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyphenateLimitZone?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.hyphens
    summary: >-
      Specifies whether or not words in a sentence can be split by the use of a manual or automatic hyphenation
      mechanism.
    name: hyphens
    fullName: hyphens
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyphens?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.justifyContent
    summary: >-
      Defines how the browser distributes space between and around flex items along the main-axis of their container.
      See CSS justify-content property https://www.w3.org/TR/css-flexbox-1/\#justify-content-property
    name: justifyContent
    fullName: justifyContent
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        justifyContent?: ICSSRule | 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' |
        'space-evenly' | 'stretch';
      return:
        type:
          - >-
            ICSSRule | 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly' |
            'stretch'
  - uid: merge-styles.IRawStyleBase.justifySelf
    summary: >-
      Justifies the box (as the alignment subject) within its containing block (as the alignment container) along the
      inline/row/main axis of the alignment container.


      See CSS jusitfy-self property https://www.w3.org/TR/css-align-3/\#propdef-justify-self
    name: justifySelf
    fullName: justifySelf
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        justifySelf?: ICSSRule | 'auto' | 'normal' | 'stretch' | ICSSBaselinePositionRule |
        ICSSOverflowAndSelfPositionRule | 'left' | 'right' | 'safe left' | 'safe right' | 'unsafe left' | 'unsafe
        right';
      return:
        type:
          - >-
            ICSSRule | 'auto' | 'normal' | 'stretch' | ICSSBaselinePositionRule | ICSSOverflowAndSelfPositionRule |
            'left' | 'right' | 'safe left' | 'safe right' | 'unsafe left' | 'unsafe right'
  - uid: merge-styles.IRawStyleBase.left
    summary: >-
      Sets the left position of an element relative to the nearest anscestor that is set to position absolute, relative,
      or fixed.
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.letterSpacing
    summary: The letter-spacing CSS property specifies the spacing behavior between text characters.
    name: letterSpacing
    fullName: letterSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'letterSpacing?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.lineHeight
    summary: >-
      Specifies the height of an inline block level element. See CSS 2.1 line-height property
      https://www.w3.org/TR/CSS21/visudet.html\#propdef-line-height
    name: lineHeight
    fullName: lineHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineHeight?: ICSSRule | ''normal'' | ICSSPixelUnitRule | ICSSPercentageRule;'
      return:
        type:
          - ICSSRule | 'normal' | ICSSPixelUnitRule | ICSSPercentageRule
  - uid: merge-styles.IRawStyleBase.listStyle
    summary: >-
      Shorthand property that sets the list-style-type, list-style-position and list-style-image properties in one
      declaration.
    name: listStyle
    fullName: listStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'listStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.listStyleImage
    summary: >-
      This property sets the image that will be used as the list item marker. When the image is available, it will
      replace the marker set with the 'list-style-type' marker. That also means that if the image is not available, it
      will show the style specified by list-style-property
    name: listStyleImage
    fullName: listStyleImage
    langs:
      - typeScript
    type: property
    syntax:
      content: 'listStyleImage?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.listStylePosition
    summary: Specifies if the list-item markers should appear inside or outside the content flow.
    name: listStylePosition
    fullName: listStylePosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'listStylePosition?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.listStyleType
    summary: Specifies the type of list-item marker in a list.
    name: listStyleType
    fullName: listStyleType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'listStyleType?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.margin
    summary: >-
      The margin property is shorthand to allow you to set all four margins of an element at once. Its equivalent
      longhand properties are margin-top, margin-right, margin-bottom and margin-left. Negative values are also allowed.
    name: margin
    fullName: margin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'margin?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.marginBottom
    summary: margin-bottom sets the bottom margin of an element.
    name: marginBottom
    fullName: marginBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'marginBottom?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.marginLeft
    summary: margin-left sets the left margin of an element.
    name: marginLeft
    fullName: marginLeft
    langs:
      - typeScript
    type: property
    syntax:
      content: 'marginLeft?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.marginRight
    summary: margin-right sets the right margin of an element.
    name: marginRight
    fullName: marginRight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'marginRight?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.marginTop
    summary: margin-top sets the top margin of an element.
    name: marginTop
    fullName: marginTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'marginTop?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.marqueeDirection
    summary: The marquee-direction determines the initial direction in which the marquee content moves.
    name: marqueeDirection
    fullName: marqueeDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'marqueeDirection?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.marqueeStyle
    summary: The 'marquee-style' property determines a marquee's scrolling behavior.
    name: marqueeStyle
    fullName: marqueeStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'marqueeStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.mask
    summary: >-
      This property is shorthand for setting mask-image, mask-mode, mask-repeat, mask-position, mask-clip, mask-origin,
      mask-composite and mask-size. Omitted values are set to their original properties' initial values.
    name: mask
    fullName: mask
    langs:
      - typeScript
    type: property
    syntax:
      content: 'mask?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.maskBorder
    summary: >-
      This property is shorthand for setting mask-border-source, mask-border-slice, mask-border-width,
      mask-border-outset, and mask-border-repeat. Omitted values are set to their original properties' initial values.
    name: maskBorder
    fullName: maskBorder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maskBorder?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.maskBorderRepeat
    summary: >-
      This property specifies how the images for the sides and the middle part of the mask image are scaled and tiled.
      The first keyword applies to the horizontal sides, the second one applies to the vertical ones. If the second
      keyword is absent, it is assumed to be the same as the first, similar to the CSS border-image-repeat property.
    name: maskBorderRepeat
    fullName: maskBorderRepeat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maskBorderRepeat?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.maskBorderSlice
    summary: >-
      This property specifies inward offsets from the top, right, bottom, and left edges of the mask image, dividing it
      into nine regions: four corners, four edges, and a middle. The middle image part is discarded and treated as fully
      transparent black unless the fill keyword is present. The four values set the top, right, bottom and left offsets
      in that order, similar to the CSS border-image-slice property.
    name: maskBorderSlice
    fullName: maskBorderSlice
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maskBorderSlice?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.maskBorderSource
    summary: >-
      Specifies an image to be used as a mask. An image that is empty, fails to download, is non-existent, or cannot be
      displayed is ignored and does not mask the element.
    name: maskBorderSource
    fullName: maskBorderSource
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maskBorderSource?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.maskBorderWidth
    summary: 'This property sets the width of the mask box image, similar to the CSS border-image-width property.'
    name: maskBorderWidth
    fullName: maskBorderWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maskBorderWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.maskClip
    summary: >-
      Determines the mask painting area, which defines the area that is affected by the mask. The painted content of an
      element may be restricted to this area.
    name: maskClip
    fullName: maskClip
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maskClip?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.maskOrigin
    summary: >-
      For elements rendered as a single box, specifies the mask positioning area. For elements rendered as multiple
      boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes box-decoration-break
      operates on to determine the mask positioning area(s).
    name: maskOrigin
    fullName: maskOrigin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maskOrigin?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.maxFontSize
    summary: >-
      This property must not be used. It is no longer included in any standard or standard track specification, nor is
      it implemented in any browser. It is only used when the text-align-last property is set to size. It controls
      allowed adjustments of font-size to fit line content.
    name: maxFontSize
    fullName: maxFontSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxFontSize?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.maxHeight
    summary: >-
      Sets the maximum height for an element. It prevents the height of the element to exceed the specified value. If
      min-height is specified and is greater than max-height, max-height is overridden.
    name: maxHeight
    fullName: maxHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxHeight?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.maxWidth
    summary: >-
      Sets the maximum width for an element. It limits the width property to be larger than the value specified in
      max-width.
    name: maxWidth
    fullName: maxWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.minHeight
    summary: >-
      Sets the minimum height for an element. It prevents the height of the element to be smaller than the specified
      value. The value of min-height overrides both max-height and height.
    name: minHeight
    fullName: minHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minHeight?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.minWidth
    summary: >-
      Sets the minimum width of an element. It limits the width property to be not smaller than the value specified in
      min-width.
    name: minWidth
    fullName: minWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.mixBlendMode
    summary: >-
      The mix-blend-mode CSS property describes how an element's content should blend with the content of the element's
      direct parent and the element's background.
    name: mixBlendMode
    fullName: mixBlendMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'mixBlendMode?: ICSSRule | IMixBlendModes;'
      return:
        type:
          - ICSSRule | IMixBlendModes
  - uid: merge-styles.IRawStyleBase.MozOsxFontSmoothing
    summary: (Moz specific) font smoothing directive.
    name: MozOsxFontSmoothing
    fullName: MozOsxFontSmoothing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'MozOsxFontSmoothing?: ''none'' | ''antialiased'' | ''grayscale'' | ''subpixel-antialiased'';'
      return:
        type:
          - '''none'' | ''antialiased'' | ''grayscale'' | ''subpixel-antialiased'''
  - uid: merge-styles.IRawStyleBase.MsHighContrastAdjust
    summary: (Ms specific) constrast adjust rule.
    name: MsHighContrastAdjust
    fullName: MsHighContrastAdjust
    langs:
      - typeScript
    type: property
    syntax:
      content: 'MsHighContrastAdjust?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.objectFit
    summary: >-
      The ‘object-fit’ property specifies how the contents of a replaced element should be fitted to the box established
      by its used height and width. See CSS 3 object-fit property https://www.w3.org/TR/css3-images/\#the-object-fit
    name: objectFit
    fullName: objectFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'objectFit?: ICSSRule | ''cover'' | ''contain'' | ''fill'' | ''none'';'
      return:
        type:
          - ICSSRule | 'cover' | 'contain' | 'fill' | 'none'
  - uid: merge-styles.IRawStyleBase.opacity
    summary: >-
      Specifies the transparency of an element. See CSS 3 opacity property
      https://drafts.csswg.org/css-color-3/\#opacity
    name: opacity
    fullName: opacity
    langs:
      - typeScript
    type: property
    syntax:
      content: 'opacity?: ICSSRule | number | string;'
      return:
        type:
          - ICSSRule | number | string
  - uid: merge-styles.IRawStyleBase.order
    summary: >-
      Specifies the order used to lay out flex items in their flex container. Elements are laid out in the ascending
      order of the order value. See CSS order property https://drafts.csswg.org/css-flexbox-1/\#order-property
    name: order
    fullName: order
    langs:
      - typeScript
    type: property
    syntax:
      content: 'order?: ICSSRule | number;'
      return:
        type:
          - ICSSRule | number
  - uid: merge-styles.IRawStyleBase.orphans
    summary: >-
      In paged media, this property defines the minimum number of lines in a block container that must be left at the
      bottom of the page. See CSS 3 orphans, widows properties https://drafts.csswg.org/css-break-3/\#widows-orphans
    name: orphans
    fullName: orphans
    langs:
      - typeScript
    type: property
    syntax:
      content: 'orphans?: ICSSRule | number;'
      return:
        type:
          - ICSSRule | number
  - uid: merge-styles.IRawStyleBase.outline
    summary: >-
      The CSS outline property is a shorthand property for setting one or more of the individual outline properties
      outline-style, outline-width and outline-color in a single rule. In most cases the use of this shortcut is
      preferable and more convenient. Outlines differ from borders in the following ways: • Outlines do not take up
      space, they are drawn above the content. • Outlines may be non-rectangular. They are rectangular in Gecko/Firefox.
      Internet Explorer attempts to place the smallest contiguous outline around all elements or shapes that are
      indicated to have an outline. Opera draws a non-rectangular shape around a construct.
    name: outline
    fullName: outline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outline?: ICSSRule | 0 | string;'
      return:
        type:
          - ICSSRule | 0 | string
  - uid: merge-styles.IRawStyleBase.outlineColor
    summary: >-
      The outline-color property sets the color of the outline of an element. An outline is a line that is drawn around
      elements, outside the border edge, to make the element stand out.
    name: outlineColor
    fullName: outlineColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.outlineOffset
    summary: The outline-offset property offsets the outline and draw it beyond the border edge.
    name: outlineOffset
    fullName: outlineOffset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineOffset?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.overflow
    summary: >-
      The overflow property controls how extra content exceeding the bounding box of an element is rendered. It can be
      used in conjunction with an element that has a fixed width and height, to eliminate text-induced page distortion.
    name: overflow
    fullName: overflow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflow?: ICSSRule | ''auto'' | ''hidden'' | ''scroll'' | ''visible'';'
      return:
        type:
          - ICSSRule | 'auto' | 'hidden' | 'scroll' | 'visible'
  - uid: merge-styles.IRawStyleBase.overflowStyle
    summary: Specifies the preferred scrolling methods for elements that overflow.
    name: overflowStyle
    fullName: overflowStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.overflowWrap
    summary: >-
      Specifies whether or not the browser should insert line breaks within words to prevent text from overflowing its
      content box. In contrast to word-break, overflow-wrap will only create a break if an entire word cannot be placed
      on its own line without overflowing.
    name: overflowWrap
    fullName: overflowWrap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowWrap?: ICSSRule | ''normal'' | ''break-word'';'
      return:
        type:
          - ICSSRule | 'normal' | 'break-word'
  - uid: merge-styles.IRawStyleBase.overflowX
    summary: Controls how extra content exceeding the x-axis of the bounding box of an element is rendered.
    name: overflowX
    fullName: overflowX
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowX?: ICSSRule | ''auto'' | ''hidden'' | ''scroll'' | ''visible'';'
      return:
        type:
          - ICSSRule | 'auto' | 'hidden' | 'scroll' | 'visible'
  - uid: merge-styles.IRawStyleBase.overflowY
    summary: Controls how extra content exceeding the y-axis of the bounding box of an element is rendered.
    name: overflowY
    fullName: overflowY
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowY?: ICSSRule | ''auto'' | ''hidden'' | ''scroll'' | ''visible'';'
      return:
        type:
          - ICSSRule | 'auto' | 'hidden' | 'scroll' | 'visible'
  - uid: merge-styles.IRawStyleBase.padding
    summary: >-
      The padding optional CSS property sets the required padding space on one to four sides of an element. The padding
      area is the space between an element and its border. Negative values are not allowed but decimal values are
      permitted. The element size is treated as fixed, and the content of the element shifts toward the center as
      padding is increased. The padding property is a shorthand to avoid setting each side separately (padding-top,
      padding-right, padding-bottom, padding-left).
    name: padding
    fullName: padding
    langs:
      - typeScript
    type: property
    syntax:
      content: 'padding?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingBlockEnd
    summary: >-
      The padding-block-end CSS property defines the logical block end padding of an element, which maps to a physical
      padding depending on the element's writing mode, directionality, and text orientation. It corresponds to the
      padding-top, padding-right, padding-bottom, or padding-left property depending on the values defined for
      writing-mode, direction, and text-orientation.
    name: paddingBlockEnd
    fullName: paddingBlockEnd
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingBlockEnd?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingBlockStart
    summary: >-
      The padding-block-start CSS property defines the logical block start padding of an element, which maps to a
      physical padding depending on the element's writing mode, directionality, and text orientation. It corresponds to
      the padding-top, padding-right, padding-bottom, or padding-left property depending on the values defined for
      writing-mode, direction, and text-orientation.
    name: paddingBlockStart
    fullName: paddingBlockStart
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingBlockStart?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingBottom
    summary: >-
      The padding-bottom CSS property of an element sets the padding space required on the bottom of an element. The
      padding area is the space between the content of the element and its border. Contrary to margin-bottom values,
      negative values of padding-bottom are invalid.
    name: paddingBottom
    fullName: paddingBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingBottom?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingInlineEnd
    summary: >-
      The padding-inline-end CSS property defines the logical inline end padding of an element, which maps to a physical
      padding depending on the element's writing mode, directionality, and text orientation. It corresponds to the
      padding-top, padding-right, padding-bottom, or padding-left property depending on the values defined for
      writing-mode, direction, and text-orientation.
    name: paddingInlineEnd
    fullName: paddingInlineEnd
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingInlineEnd?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingInlineStart
    summary: >-
      The padding-inline-start CSS property defines the logical inline start padding of an element, which maps to a
      physical padding depending on the element's writing mode, directionality, and text orientation. It corresponds to
      the padding-top, padding-right, padding-bottom, or padding-left property depending on the values defined for
      writing-mode, direction, and text-orientation.
    name: paddingInlineStart
    fullName: paddingInlineStart
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingInlineStart?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingLeft
    summary: >-
      The padding-left CSS property of an element sets the padding space required on the left side of an element. The
      padding area is the space between the content of the element and its border. Contrary to margin-left values,
      negative values of padding-left are invalid.
    name: paddingLeft
    fullName: paddingLeft
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingLeft?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingRight
    summary: >-
      The padding-right CSS property of an element sets the padding space required on the right side of an element. The
      padding area is the space between the content of the element and its border. Contrary to margin-right values,
      negative values of padding-right are invalid.
    name: paddingRight
    fullName: paddingRight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingRight?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.paddingTop
    summary: >-
      The padding-top CSS property of an element sets the padding space required on the top of an element. The padding
      area is the space between the content of the element and its border. Contrary to margin-top values, negative
      values of padding-top are invalid.
    name: paddingTop
    fullName: paddingTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paddingTop?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.pageBreakAfter
    summary: >-
      The page-break-after property is supported in all major browsers. With CSS3, page-break-\* properties are only
      aliases of the break-\* properties. The CSS3 Fragmentation spec defines breaks for all CSS box fragmentation.
    name: pageBreakAfter
    fullName: pageBreakAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pageBreakAfter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.pageBreakBefore
    summary: >-
      The page-break-before property sets the page-breaking behavior before an element. With CSS3, page-break-\*
      properties are only aliases of the break-\* properties. The CSS3 Fragmentation spec defines breaks for all CSS box
      fragmentation.
    name: pageBreakBefore
    fullName: pageBreakBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pageBreakBefore?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.pageBreakInside
    summary: >-
      Sets the page-breaking behavior inside an element. With CSS3, page-break-\* properties are only aliases of the
      break-\* properties. The CSS3 Fragmentation spec defines breaks for all CSS box fragmentation.
    name: pageBreakInside
    fullName: pageBreakInside
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pageBreakInside?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.pause
    summary: >-
      The pause property determines how long a speech media agent should pause before and after presenting an element.
      It is a shorthand for the pause-before and pause-after properties.
    name: pause
    fullName: pause
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pause?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.pauseAfter
    summary: >-
      The pause-after property determines how long a speech media agent should pause after presenting an element. It may
      be replaced by the shorthand property pause, which sets pause time before and after.
    name: pauseAfter
    fullName: pauseAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pauseAfter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.pauseBefore
    summary: >-
      The pause-before property determines how long a speech media agent should pause before presenting an element. It
      may be replaced by the shorthand property pause, which sets pause time before and after.
    name: pauseBefore
    fullName: pauseBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pauseBefore?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.perspective
    summary: >-
      The perspective property defines how far an element is placed from the view on the z-axis, from the screen to the
      viewer. Perspective defines how an object is viewed. In graphic arts, perspective is the representation on a flat
      surface of what the viewer's eye would see in a 3D space. (See Wikipedia for more information about graphical
      perspective and for related illustrations.) The illusion of perspective on a flat surface, such as a computer
      screen, is created by projecting points on the flat surface as they would appear if the flat surface were a window
      through which the viewer was looking at the object. In discussion of virtual environments, this flat surface is
      called a projection plane.
    name: perspective
    fullName: perspective
    langs:
      - typeScript
    type: property
    syntax:
      content: 'perspective?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.perspectiveOrigin
    summary: >-
      The perspective-origin property establishes the origin for the perspective property. It effectively sets the X and
      Y position at which the viewer appears to be looking at the children of the element. When used with perspective,
      perspective-origin changes the appearance of an object, as if a viewer were looking at it from a different origin.
      An object appears differently if a viewer is looking directly at it versus looking at it from below, above, or
      from the side. Thus, the perspective-origin is like a vanishing point. The default value of perspective-origin is
      50% 50%. This displays an object as if the viewer's eye were positioned directly at the center of the screen, both
      top-to-bottom and left-to-right. A value of 0% 0% changes the object as if the viewer was looking toward the top
      left angle. A value of 100% 100% changes the appearance as if viewed toward the bottom right angle.
    name: perspectiveOrigin
    fullName: perspectiveOrigin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'perspectiveOrigin?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.pointerEvents
    summary: >-
      The pointer-events property allows you to control whether an element can be the target for the pointing device
      (e.g, mouse, pen) events.
    name: pointerEvents
    fullName: pointerEvents
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pointerEvents?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.position
    summary: >-
      The position property controls the type of positioning used by an element within its parent elements. The effect
      of the position property depends on a lot of factors, for example the position property of parent elements.
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position?: ICSSRule | ''static'' | ''relative'' | ''absolute'' | ''fixed'' | ''sticky'';'
      return:
        type:
          - ICSSRule | 'static' | 'relative' | 'absolute' | 'fixed' | 'sticky'
  - uid: merge-styles.IRawStyleBase.quotes
    summary: Sets the type of quotation marks for embedded quotations.
    name: quotes
    fullName: quotes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'quotes?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.regionFragment
    summary: >-
      Controls whether the last region in a chain displays additional 'overset' content according its default overflow
      property, or if it displays a fragment of content as if it were flowing into a subsequent region.
    name: regionFragment
    fullName: regionFragment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'regionFragment?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.resize
    summary: 'The resize CSS sets whether an element is resizable, and if so, in which direction(s).'
    name: resize
    fullName: resize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'resize?: ICSSRule | ''none'' | ''both'' | ''horizontal'' | ''vertical'' | ''block'' | ''inline'';'
      return:
        type:
          - ICSSRule | 'none' | 'both' | 'horizontal' | 'vertical' | 'block' | 'inline'
  - uid: merge-styles.IRawStyleBase.restAfter
    summary: >-
      The rest-after property determines how long a speech media agent should pause after presenting an element's main
      content, before presenting that element's exit cue sound. It may be replaced by the shorthand property rest, which
      sets rest time before and after.
    name: restAfter
    fullName: restAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'restAfter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.restBefore
    summary: >-
      The rest-before property determines how long a speech media agent should pause after presenting an intro cue sound
      for an element, before presenting that element's main content. It may be replaced by the shorthand property rest,
      which sets rest time before and after.
    name: restBefore
    fullName: restBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'restBefore?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.right
    summary: Specifies the position an element in relation to the right side of the containing element.
    name: right
    fullName: right
    langs:
      - typeScript
    type: property
    syntax:
      content: 'right?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.shapeImageThreshold
    summary: >-
      Defines the alpha channel threshold used to extract a shape from an image. Can be thought of as a "minimum
      opacity" threshold; that is, a value of 0.5 means that the shape will enclose all the pixels that are more than
      50% opaque.
    name: shapeImageThreshold
    fullName: shapeImageThreshold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shapeImageThreshold?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.shapeInside
    summary: >-
      A future level of CSS Shapes will define a shape-inside property, which will define a shape to wrap content within
      the element. See Editor's Draft http://dev.w3.org/csswg/css-shapes and CSSWG wiki page on next-level plans
      http://wiki.csswg.org/spec/css-shapes
    name: shapeInside
    fullName: shapeInside
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shapeInside?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.shapeMargin
    summary: >-
      Adds a margin to a shape-outside. In effect, defines a new shape that is the smallest contour around all the
      points that are the shape-margin distance outward perpendicular to each point on the underlying shape. For points
      where a perpendicular direction is not defined (e.g., a triangle corner), takes all points on a circle centered at
      the point and with a radius of the shape-margin distance. This property accepts only non-negative values.
    name: shapeMargin
    fullName: shapeMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shapeMargin?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.shapeOutside
    summary: >-
      Declares a shape around which text should be wrapped, with possible modifications from the shape-margin property.
      The shape defined by shape-outside and shape-margin changes the geometry of a float element's float area.
    name: shapeOutside
    fullName: shapeOutside
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shapeOutside?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.speak
    summary: The speak property determines whether or not a speech synthesizer will read aloud the contents of an element.
    name: speak
    fullName: speak
    langs:
      - typeScript
    type: property
    syntax:
      content: 'speak?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.speakAs
    summary: >-
      The speak-as property determines how the speech synthesizer interprets the content: words as whole words or as a
      sequence of letters, numbers as a numerical value or a sequence of digits, punctuation as pauses in speech or
      named punctuation characters.
    name: speakAs
    fullName: speakAs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'speakAs?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.stroke
    summary: >-
      The stroke property in CSS is for adding a border to SVG shapes. See SVG 1.1
      https://www.w3.org/TR/SVG/painting.html\#Stroke
    name: stroke
    fullName: stroke
    langs:
      - typeScript
    type: property
    syntax:
      content: 'stroke?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.strokeLinecap
    summary: >-
      SVG: The stroke-linecap attribute defines the shape to be used at the end of open subpaths when they are stroked.
      See SVG 1.1 https://www.w3.org/TR/SVG/painting.html\#LineCaps
    name: strokeLinecap
    fullName: strokeLinecap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strokeLinecap?: ICSSRule | ''butt'' | ''round'' | ''square'';'
      return:
        type:
          - ICSSRule | 'butt' | 'round' | 'square'
  - uid: merge-styles.IRawStyleBase.strokeOpacity
    summary: >-
      SVG: Specifies the opacity of the outline on the current object. See SVG 1.1
      https://www.w3.org/TR/SVG/painting.html\#StrokeOpacityProperty
    name: strokeOpacity
    fullName: strokeOpacity
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strokeOpacity?: ICSSRule | number;'
      return:
        type:
          - ICSSRule | number
  - uid: merge-styles.IRawStyleBase.strokeWidth
    summary: >-
      SVG: Specifies the width of the outline on the current object. See SVG 1.1
      https://www.w3.org/TR/SVG/painting.html\#StrokeWidthProperty
    name: strokeWidth
    fullName: strokeWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strokeWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.tableLayout
    summary: 'The ''table-layout'' property controls the algorithm used to lay out the table cells, rows, and columns.'
    name: tableLayout
    fullName: tableLayout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tableLayout?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.tabSize
    summary: The tab-size CSS property is used to customise the width of a tab (U+0009) character.
    name: tabSize
    fullName: tabSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tabSize?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textAlign
    summary: >-
      The text-align CSS property describes how inline content like text is aligned in its parent block element.
      text-align does not control the alignment of block elements itself, only their inline content.
    name: textAlign
    fullName: textAlign
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textAlign?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textAlignLast
    summary: >-
      The text-align-last CSS property describes how the last line of a block element or a line before line break is
      aligned in its parent block element.
    name: textAlignLast
    fullName: textAlignLast
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textAlignLast?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textDecoration
    summary: >-
      The text-decoration CSS property is used to set the text formatting to underline, overline, line-through or blink.
      underline and overline decorations are positioned under the text, line-through over it.
    name: textDecoration
    fullName: textDecoration
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textDecoration?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textDecorationColor
    summary: 'Sets the color of any text decoration, such as underlines, overlines, and strike throughs.'
    name: textDecorationColor
    fullName: textDecorationColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textDecorationColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textDecorationLine
    summary: 'Sets what kind of line decorations are added to an element, such as underlines, overlines, etc.'
    name: textDecorationLine
    fullName: textDecorationLine
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textDecorationLine?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textDecorationSkip
    summary: Specifies what parts of an element’s content are skipped over when applying any text decoration.
    name: textDecorationSkip
    fullName: textDecorationSkip
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textDecorationSkip?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textDecorationStyle
    summary: >-
      This property specifies the style of the text decoration line drawn on the specified element. The intended meaning
      for the values are the same as those of the border-style-properties.
    name: textDecorationStyle
    fullName: textDecorationStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textDecorationStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textEmphasis
    summary: >-
      The text-emphasis property will apply special emphasis marks to the elements text. Slightly similar to the
      text-decoration property only that this property can have affect on the line-height. It also is noted that this is
      shorthand for text-emphasis-style and for text-emphasis-color.
    name: textEmphasis
    fullName: textEmphasis
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textEmphasis?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textEmphasisColor
    summary: The text-emphasis-color property specifies the foreground color of the emphasis marks.
    name: textEmphasisColor
    fullName: textEmphasisColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textEmphasisColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textEmphasisStyle
    summary: The text-emphasis-style property applies special emphasis marks to an element's text.
    name: textEmphasisStyle
    fullName: textEmphasisStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textEmphasisStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textHeight
    summary: >-
      This property helps determine an inline box's block-progression dimension, derived from the text-height and
      font-size properties for non-replaced elements, the height or the width for replaced elements, and the stacked
      block-progression dimension for inline-block elements. The block-progression dimension determines the position of
      the padding, border and margin for the element.
    name: textHeight
    fullName: textHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textHeight?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textIndent
    summary: >-
      Specifies the amount of space horizontally that should be left on the first line of the text of an element. This
      horizontal spacing is at the beginning of the first line and is in respect to the left edge of the containing
      block box.
    name: textIndent
    fullName: textIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textIndent?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textOverflow
    summary: >-
      The text-overflow shorthand CSS property determines how overflowed content that is not displayed is signaled to
      the users. It can be clipped, display an ellipsis ('…', U+2026 HORIZONTAL ELLIPSIS) or a Web author-defined
      string. It covers the two long-hand properties text-overflow-mode and text-overflow-ellipsis
    name: textOverflow
    fullName: textOverflow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOverflow?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textOverline
    summary: >-
      The text-overline property is the shorthand for the text-overline-style, text-overline-width, text-overline-color,
      and text-overline-mode properties.
    name: textOverline
    fullName: textOverline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOverline?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textOverlineColor
    summary: Specifies the line color for the overline text decoration.
    name: textOverlineColor
    fullName: textOverlineColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOverlineColor?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textOverlineMode
    summary: >-
      Sets the mode for the overline text decoration, determining whether the text decoration affects the space
      characters or not.
    name: textOverlineMode
    fullName: textOverlineMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOverlineMode?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textOverlineStyle
    summary: Specifies the line style for overline text decoration.
    name: textOverlineStyle
    fullName: textOverlineStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOverlineStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textOverlineWidth
    summary: Specifies the line width for the overline text decoration.
    name: textOverlineWidth
    fullName: textOverlineWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOverlineWidth?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.textRendering
    summary: >-
      The text-rendering CSS property provides information to the browser about how to optimize when rendering text.
      Options are: legibility, speed or geometric precision.
    name: textRendering
    fullName: textRendering
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textRendering?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textShadow
    summary: >-
      The CSS text-shadow property applies one or more drop shadows to the text and `<text-decorations>` of an element.
      Each shadow is specified as an offset from the text, along with optional color and blur radius values.
    name: textShadow
    fullName: textShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textShadow?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textTransform
    summary: This property transforms text for styling purposes. (It has no effect on the underlying content.)
    name: textTransform
    fullName: textTransform
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textTransform?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textUnderlinePosition
    summary: Unsupported. This property will add a underline position value to the element that has an underline defined.
    name: textUnderlinePosition
    fullName: textUnderlinePosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textUnderlinePosition?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.textUnderlineStyle
    summary: >-
      After review this should be replaced by text-decoration should it not? This property will set the underline style
      for text with a line value for underline, overline, and line-through.
    name: textUnderlineStyle
    fullName: textUnderlineStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textUnderlineStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.top
    summary: >-
      This property specifies how far an absolutely positioned box's top margin edge is offset below the top edge of the
      box's containing block. For relatively positioned boxes, the offset is with respect to the top edges of the box
      itself (i.e., the box is given a position in the normal flow, then offset from that position according to these
      properties).
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.touchAction
    summary: >-
      Determines whether touch input may trigger default behavior supplied by the user agent, such as panning or
      zooming.
    name: touchAction
    fullName: touchAction
    langs:
      - typeScript
    type: property
    syntax:
      content: 'touchAction?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transform
    summary: >-
      CSS transforms allow elements styled with CSS to be transformed in two-dimensional or three-dimensional space.
      Using this property, elements can be translated, rotated, scaled, and skewed. The value list may consist of 2D
      and/or 3D transform values.
    name: transform
    fullName: transform
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transform?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transformOrigin
    summary: >-
      This property defines the origin of the transformation axes relative to the element to which the transformation is
      applied.
    name: transformOrigin
    fullName: transformOrigin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transformOrigin?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transformOriginZ
    summary: >-
      This property allows you to define the relative position of the origin of the transformation grid along the
      z-axis.
    name: transformOriginZ
    fullName: transformOriginZ
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transformOriginZ?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transformStyle
    summary: This property specifies how nested elements are rendered in 3D space relative to their parent.
    name: transformStyle
    fullName: transformStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transformStyle?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transition
    summary: >-
      The transition CSS property is a shorthand property for transition-property, transition-duration,
      transition-timing-function, and transition-delay. It allows to define the transition between two states of an
      element.
    name: transition
    fullName: transition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transition?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transitionDelay
    summary: >-
      Defines when the transition will start. A value of ‘0s’ means the transition will execute as soon as the property
      is changed. Otherwise, the value specifies an offset from the moment the property is changed, and the transition
      will delay execution by that offset.
    name: transitionDelay
    fullName: transitionDelay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transitionDelay?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transitionDuration
    summary: The 'transition-duration' property specifies the length of time a transition animation takes to complete.
    name: transitionDuration
    fullName: transitionDuration
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transitionDuration?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transitionProperty
    summary: The 'transition-property' property specifies the name of the CSS property to which the transition is applied.
    name: transitionProperty
    fullName: transitionProperty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transitionProperty?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.transitionTimingFunction
    summary: Sets the pace of action within a transition
    name: transitionTimingFunction
    fullName: transitionTimingFunction
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transitionTimingFunction?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.unicodeBidi
    summary: The unicode-bidi CSS property specifies the level of embedding with respect to the bidirectional algorithm.
    name: unicodeBidi
    fullName: unicodeBidi
    langs:
      - typeScript
    type: property
    syntax:
      content: 'unicodeBidi?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.userFocus
    summary: This is for all the high level UX stuff.
    name: userFocus
    fullName: userFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'userFocus?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.userInput
    summary: For inputing user content
    name: userInput
    fullName: userInput
    langs:
      - typeScript
    type: property
    syntax:
      content: 'userInput?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.userSelect
    summary: Defines the text selection behavior.
    name: userSelect
    fullName: userSelect
    langs:
      - typeScript
    type: property
    syntax:
      content: 'userSelect?: ICSSRule | ''none'' | ''auto'' | ''text'' | ''all'' | ''contain'';'
      return:
        type:
          - ICSSRule | 'none' | 'auto' | 'text' | 'all' | 'contain'
  - uid: merge-styles.IRawStyleBase.verticalAlign
    summary: >-
      The vertical-align property controls how inline elements or text are vertically aligned compared to the baseline.
      If this property is used on table-cells it controls the vertical alignment of content of the table cell.
    name: verticalAlign
    fullName: verticalAlign
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlign?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.visibility
    summary: The visibility property specifies whether the boxes generated by an element are rendered.
    name: visibility
    fullName: visibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visibility?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voiceBalance
    summary: The voice-balance property sets the apparent position (in stereo sound) of the synthesized voice for spoken media.
    name: voiceBalance
    fullName: voiceBalance
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voiceBalance?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voiceDuration
    summary: >-
      The voice-duration property allows the author to explicitly set the amount of time it should take a speech
      synthesizer to read an element's content, for example to allow the speech to be synchronized with other media.
      With a value of auto (the default) the length of time it takes to read the content is determined by the content
      itself and the voice-rate property.
    name: voiceDuration
    fullName: voiceDuration
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voiceDuration?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voiceFamily
    summary: >-
      The voice-family property sets the speaker's voice used by a speech media agent to read an element. The speaker
      may be specified as a named character (to match a voice option in the speech reading software) or as a generic
      description of the age and gender of the voice. Similar to the font-family property for visual media, a
      comma-separated list of fallback options may be given in case the speech reader does not recognize the character
      name or cannot synthesize the requested combination of generic properties.
    name: voiceFamily
    fullName: voiceFamily
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voiceFamily?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voicePitch
    summary: >-
      The voice-pitch property sets pitch or tone (high or low) for the synthesized speech when reading an element; the
      pitch may be specified absolutely or relative to the normal pitch for the voice-family used to read the text.
    name: voicePitch
    fullName: voicePitch
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voicePitch?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voiceRange
    summary: >-
      The voice-range property determines how much variation in pitch or tone will be created by the speech synthesize
      when reading an element. Emphasized text, grammatical structures and punctuation may all be rendered as changes in
      pitch, this property determines how strong or obvious those changes are; large ranges are associated with
      enthusiastic or emotional speech, while small ranges are associated with flat or mechanical speech.
    name: voiceRange
    fullName: voiceRange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voiceRange?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voiceRate
    summary: The voice-rate property sets the speed at which the voice synthesized by a speech media agent will read content.
    name: voiceRate
    fullName: voiceRate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voiceRate?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voiceStress
    summary: The voice-stress property sets the level of vocal emphasis to be used for synthesized speech reading the element.
    name: voiceStress
    fullName: voiceStress
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voiceStress?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.voiceVolume
    summary: >-
      The voice-volume property sets the volume for spoken content in speech media. It replaces the deprecated volume
      property.
    name: voiceVolume
    fullName: voiceVolume
    langs:
      - typeScript
    type: property
    syntax:
      content: 'voiceVolume?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.WebkitBackdropFilter
    summary: Edge requires the -webkit prefix backdrop-filter.
    name: WebkitBackdropFilter
    fullName: WebkitBackdropFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'WebkitBackdropFilter?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.WebkitFontSmoothing
    summary: (Webkit specific) font smoothing directive.
    name: WebkitFontSmoothing
    fullName: WebkitFontSmoothing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'WebkitFontSmoothing?: ''none'' | ''antialiased'' | ''grayscale'' | ''subpixel-antialiased'';'
      return:
        type:
          - '''none'' | ''antialiased'' | ''grayscale'' | ''subpixel-antialiased'''
  - uid: merge-styles.IRawStyleBase.WebkitOverflowScrolling
    summary: (Webkit specific) momentum scrolling on iOS devices
    name: WebkitOverflowScrolling
    fullName: WebkitOverflowScrolling
    langs:
      - typeScript
    type: property
    syntax:
      content: 'WebkitOverflowScrolling?: ''auto'' | ''touch'';'
      return:
        type:
          - '''auto'' | ''touch'''
  - uid: merge-styles.IRawStyleBase.whiteSpace
    summary: >-
      The white-space property controls whether and how white space inside the element is collapsed, and whether lines
      may wrap at unforced "soft wrap" opportunities.
    name: whiteSpace
    fullName: whiteSpace
    langs:
      - typeScript
    type: property
    syntax:
      content: 'whiteSpace?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.widows
    summary: >-
      In paged media, this property defines the mimimum number of lines that must be left at the top of the second page.
      See CSS 3 orphans, widows properties https://drafts.csswg.org/css-break-3/\#widows-orphans
    name: widows
    fullName: widows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'widows?: ICSSRule | number;'
      return:
        type:
          - ICSSRule | number
  - uid: merge-styles.IRawStyleBase.width
    summary: >-
      Specifies the width of the content area of an element. The content area of the element width does not include the
      padding, border, and margin of the element.
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width?: ICSSRule | ICSSPixelUnitRule;'
      return:
        type:
          - ICSSRule | ICSSPixelUnitRule
  - uid: merge-styles.IRawStyleBase.wordBreak
    summary: >-
      The word-break property is often used when there is long generated content that is strung together without and
      spaces or hyphens to beak apart. A common case of this is when there is a long URL that does not have any hyphens.
      This case could potentially cause the breaking of the layout as it could extend past the parent element.
    name: wordBreak
    fullName: wordBreak
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wordBreak?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.wordSpacing
    summary: The word-spacing CSS property specifies the spacing behavior between "words".
    name: wordSpacing
    fullName: wordSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wordSpacing?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.wordWrap
    summary: >-
      An alias of css/properties/overflow-wrap, word-wrap defines whether to break words when the content exceeds the
      boundaries of its container.
    name: wordWrap
    fullName: wordWrap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wordWrap?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.wrapFlow
    summary: >-
      Specifies how exclusions affect inline content within block-level elements. Elements lay out their inline content
      in their content area but wrap around exclusion areas.
    name: wrapFlow
    fullName: wrapFlow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapFlow?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.wrapMargin
    summary: >-
      Set the value that is used to offset the inner wrap shape from other shapes. Inline content that intersects a
      shape with this property will be pushed by this shape's margin.
    name: wrapMargin
    fullName: wrapMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapMargin?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.writingMode
    summary: >-
      writing-mode specifies if lines of text are laid out horizontally or vertically, and the direction which lines of
      text and blocks progress.
    name: writingMode
    fullName: writingMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'writingMode?: ICSSRule | string;'
      return:
        type:
          - ICSSRule | string
  - uid: merge-styles.IRawStyleBase.zIndex
    summary: >-
      The z-index property specifies the z-order of an element and its descendants. When elements overlap, z-order
      determines which one covers the other. See CSS 2 z-index property https://www.w3.org/TR/CSS2/visuren.html\#z-index
    name: zIndex
    fullName: zIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zIndex?: ICSSRule | ''auto'' | number;'
      return:
        type:
          - ICSSRule | 'auto' | number
  - uid: merge-styles.IRawStyleBase.zoom
    summary: >-
      Sets the initial zoom factor of a document defined by `@viewport`<!-- -->. See CSS zoom descriptor
      https://drafts.csswg.org/css-device-adapt/\#zoom-desc
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom?: ICSSRule | ''auto'' | number | ICSSPercentageRule;'
      return:
        type:
          - ICSSRule | 'auto' | number | ICSSPercentageRule
